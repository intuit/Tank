/* The following code was generated by JFlex 1.4.1 on 10/6/09 4:38 PM */

/*
 * 01/24/2005
 *
 * HTMLTokenMaker.java - Generates tokens for HTML syntax highlighting.
 * Copyright (C) 2005 Robert Futrell
 * robert_futrell at users.sourceforge.net
 * http://fifesoft.com/rsyntaxtextarea
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA.
 */
package org.fife.ui.rsyntaxtextarea.modes;

import java.io.*;
import javax.swing.text.Segment;

import org.fife.ui.rsyntaxtextarea.*;

/**
 * Scanner for HTML 5 files.
 * 
 * This implementation was created using <a href="http://www.jflex.de/">JFlex</a> 1.4.1; however, the generated file was
 * modified for performance. Memory allocation needs to be almost completely removed to be competitive with the
 * handwritten lexers (subclasses of <code>AbstractTokenMaker</code>, so this class has been modified so that Strings
 * are never allocated (via yytext()), and the scanner never has to worry about refilling its buffer (needlessly copying
 * chars around). We can achieve this because RText always scans exactly 1 line of tokens at a time, and hands the
 * scanner this line as an array of characters (a Segment really). Since tokens contain pointers to char arrays instead
 * of Strings holding their contents, there is no need for allocating new memory for Strings.
 * <p>
 * 
 * The actual algorithm generated for scanning has, of course, not been modified.
 * <p>
 * 
 * If you wish to regenerate this file yourself, keep in mind the following:
 * <ul>
 * <li>The generated HTMLTokenMaker.java</code> file will contain two definitions of both <code>zzRefill</code> and
 * <code>yyreset</code>. You should hand-delete the second of each definition (the ones generated by the lexer), as
 * these generated methods modify the input buffer, which we'll never have to do.</li>
 * <li>You should also change the declaration/definition of zzBuffer to NOT be initialized. This is a needless memory
 * allocation for us since we will be pointing the array somewhere else anyway.</li>
 * <li>You should NOT call <code>yylex()</code> on the generated scanner directly; rather, you should use
 * <code>getTokenList</code> as you would with any other <code>TokenMaker</code> instance.</li>
 * </ul>
 * 
 * @author Robert Futrell
 * @version 0.7
 * 
 */

public class HTMLTokenMaker extends AbstractMarkupTokenMaker {

    /** This character denotes the end of file */
    public static final int YYEOF = -1;

    /** lexical states */
    public static final int INTAG_CHECK_TAG_NAME = 5;
    public static final int JS_MLC = 12;
    public static final int INTAG_SCRIPT = 8;
    public static final int INATTR_DOUBLE_SCRIPT = 9;
    public static final int INATTR_SINGLE_SCRIPT = 10;
    public static final int DTD = 3;
    public static final int INATTR_SINGLE = 7;
    public static final int INATTR_DOUBLE = 6;
    public static final int YYINITIAL = 0;
    public static final int INTAG = 4;
    public static final int COMMENT = 1;
    public static final int JAVASCRIPT = 11;
    public static final int PI = 2;

    /**
     * Translates characters to character classes
     */
    private static final String ZZ_CMAP_PACKED =
            "\11\0\1\4\1\2\1\0\1\1\1\36\22\0\1\4\1\54\1\27" +
                    "\1\0\1\37\1\53\1\5\1\26\2\50\1\40\1\52\1\51\1\46" +
                    "\1\47\1\10\1\22\3\35\3\77\1\24\2\21\1\56\1\6\1\3" +
                    "\1\7\1\17\1\55\1\0\1\63\1\23\1\12\1\70\1\45\1\43" +
                    "\1\72\1\76\1\14\1\100\1\73\1\42\1\67\1\65\1\64\1\15" +
                    "\1\74\1\13\1\11\1\16\1\71\1\75\1\20\1\41\1\66\1\20" +
                    "\1\50\1\25\1\50\1\53\1\37\1\0\1\102\1\34\1\60\1\105" +
                    "\1\101\1\44\1\113\1\110\1\61\1\100\1\103\1\106\1\114\1\33" +
                    "\1\104\1\62\1\74\1\31\1\57\1\32\1\30\1\112\1\107\1\115" +
                    "\1\111\1\116\1\50\1\53\1\50\1\56\uff81\0";

    /**
     * Translates characters to character classes
     */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 =
            "\6\0\2\1\1\0\2\1\2\0\2\2\1\3\1\4" +
                    "\1\5\1\6\1\1\1\7\2\1\1\10\2\1\1\11" +
                    "\1\12\2\13\1\14\1\15\1\16\1\17\1\20\1\21" +
                    "\1\22\1\23\2\21\2\23\1\21\2\23\4\21\1\23" +
                    "\4\21\1\23\2\21\1\1\1\24\1\1\1\25\1\15" +
                    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\2\14" +
                    "\1\2\2\14\2\2\1\14\2\35\1\36\1\37\5\2" +
                    "\1\33\1\2\1\14\1\2\1\40\1\14\14\2\1\1" +
                    "\1\41\1\1\1\4\1\42\1\43\1\44\1\42\1\6" +
                    "\1\0\1\45\32\21\1\23\11\21\1\23\5\21\1\23" +
                    "\30\21\1\46\2\0\1\47\1\50\1\33\1\2\1\14" +
                    "\1\51\1\35\1\52\1\51\1\52\1\51\1\53\1\51" +
                    "\2\54\1\36\1\54\1\37\1\55\31\2\2\56\15\2" +
                    "\1\56\5\2\1\57\1\60\1\0\1\42\1\61\14\21" +
                    "\1\23\63\21\2\0\1\33\1\2\1\52\1\0\2\53" +
                    "\1\36\1\62\2\54\1\36\3\37\32\2\1\6\31\2" +
                    "\1\63\1\42\17\21\1\23\22\21\1\23\1\0\1\64" +
                    "\1\33\1\2\1\36\1\37\1\65\1\55\1\37\1\2" +
                    "\1\66\6\2\1\6\22\2\1\67\7\2\1\42\11\21" +
                    "\1\23\12\21\1\0\1\33\1\2\1\36\1\37\2\2" +
                    "\1\56\3\2\1\56\17\2\1\42\12\21\1\0\1\33" +
                    "\1\2\1\36\1\37\16\2\1\70\3\21\1\0\7\2" +
                    "\1\21\1\0\3\2\1\21\1\71\1\2";

    private static int[] zzUnpackAction() {
        int[] result = new int[566];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 =
            "\0\0\0\117\0\236\0\355\0\u013c\0\u018b\0\u01da\0\u0229" +
                    "\0\u0278\0\u02c7\0\u0316\0\u0365\0\u03b4\0\u0403\0\u0452\0\u04a1" +
                    "\0\u04f0\0\u053f\0\u058e\0\u05dd\0\u04a1\0\u062c\0\u067b\0\u04a1" +
                    "\0\u06ca\0\u0719\0\u04a1\0\u04a1\0\u0768\0\u07b7\0\u04a1\0\u0806" +
                    "\0\u04a1\0\u04a1\0\u04a1\0\u0855\0\u04a1\0\u08a4\0\u08f3\0\u0942" +
                    "\0\u0991\0\u09e0\0\u0a2f\0\u0a7e\0\u0acd\0\u0b1c\0\u0b6b\0\u0bba" +
                    "\0\u0c09\0\u0c58\0\u0ca7\0\u0cf6\0\u0d45\0\u0d94\0\u0855\0\u0de3" +
                    "\0\u0e32\0\u0e81\0\u04a1\0\u0ed0\0\u04a1\0\u0f1f\0\u04a1\0\u04a1" +
                    "\0\u04a1\0\u04a1\0\u04a1\0\u0f6e\0\u04a1\0\u0fbd\0\u100c\0\u04a1" +
                    "\0\u105b\0\u10aa\0\u10f9\0\u1148\0\u1197\0\u11e6\0\u1235\0\u1284" +
                    "\0\u12d3\0\u1322\0\u1371\0\u13c0\0\u140f\0\u145e\0\u04a1\0\u14ad" +
                    "\0\u14fc\0\u154b\0\u04a1\0\u159a\0\u15e9\0\u1638\0\u1687\0\u16d6" +
                    "\0\u1725\0\u1774\0\u17c3\0\u1812\0\u1861\0\u18b0\0\u18ff\0\u194e" +
                    "\0\u199d\0\u04a1\0\u19ec\0\u1a3b\0\u1a8a\0\u1ad9\0\u04a1\0\u1b28" +
                    "\0\u04a1\0\u1b77\0\u04a1\0\u1bc6\0\u1c15\0\u1c64\0\u1cb3\0\u1d02" +
                    "\0\u1d51\0\u1da0\0\u1def\0\u1e3e\0\u1e8d\0\u1edc\0\u1f2b\0\u1f7a" +
                    "\0\u1fc9\0\u2018\0\u2067\0\u20b6\0\u2105\0\u2154\0\u21a3\0\u21f2" +
                    "\0\u2241\0\u2290\0\u22df\0\u232e\0\u237d\0\u23cc\0\u241b\0\u246a" +
                    "\0\u24b9\0\u2508\0\u2557\0\u25a6\0\u25f5\0\u2644\0\u2693\0\u26e2" +
                    "\0\u2731\0\u2780\0\u27cf\0\u281e\0\u286d\0\u28bc\0\u290b\0\u295a" +
                    "\0\u29a9\0\u29f8\0\u2a47\0\u2a96\0\u2ae5\0\u2b34\0\u2b83\0\u2bd2" +
                    "\0\u2c21\0\u2c70\0\u2cbf\0\u2d0e\0\u2d5d\0\u2dac\0\u2dfb\0\u2e4a" +
                    "\0\u2e99\0\u2ee8\0\u2f37\0\u2f86\0\u2fd5\0\u3024\0\u04a1\0\u105b" +
                    "\0\u3073\0\u30c2\0\u3111\0\u3160\0\u31af\0\u31fe\0\u324d\0\u324d" +
                    "\0\u324d\0\u329c\0\u32eb\0\u333a\0\u3389\0\u33d8\0\u3427\0\u3476" +
                    "\0\u34c5\0\u04a1\0\u3514\0\u04a1\0\u3563\0\u35b2\0\u3601\0\u3650" +
                    "\0\u369f\0\u36ee\0\u373d\0\u378c\0\u37db\0\u382a\0\u3879\0\u38c8" +
                    "\0\u3917\0\u3966\0\u39b5\0\u3a04\0\u3a53\0\u3aa2\0\u3af1\0\u3b40" +
                    "\0\u3b8f\0\u3bde\0\u3c2d\0\u3c7c\0\u3ccb\0\u3d1a\0\u10f9\0\u3d69" +
                    "\0\u3db8\0\u3e07\0\u3e56\0\u3ea5\0\u3ef4\0\u3f43\0\u3f92\0\u3fe1" +
                    "\0\u4030\0\u407f\0\u40ce\0\u411d\0\u416c\0\u41bb\0\u420a\0\u4259" +
                    "\0\u42a8\0\u42f7\0\u04a1\0\u1a3b\0\u4346\0\u4395\0\u04a1\0\u43e4" +
                    "\0\u4433\0\u4482\0\u44d1\0\u4520\0\u456f\0\u45be\0\u460d\0\u465c" +
                    "\0\u46ab\0\u46fa\0\u4749\0\u4798\0\u47e7\0\u4836\0\u4885\0\u48d4" +
                    "\0\u4923\0\u4972\0\u49c1\0\u4a10\0\u4a5f\0\u4aae\0\u4afd\0\u4b4c" +
                    "\0\u26e2\0\u4b9b\0\u4bea\0\u4c39\0\u4c88\0\u4cd7\0\u4d26\0\u4d75" +
                    "\0\u4dc4\0\u4e13\0\u4e62\0\u4eb1\0\u4f00\0\u4f4f\0\u4f9e\0\u4fed" +
                    "\0\u503c\0\u508b\0\u50da\0\u5129\0\u5178\0\u51c7\0\u5216\0\u5265" +
                    "\0\u52b4\0\u5303\0\u5352\0\u53a1\0\u53f0\0\u543f\0\u548e\0\u54dd" +
                    "\0\u552c\0\u557b\0\u55ca\0\u5619\0\u5668\0\u0acd\0\u56b7\0\u5706" +
                    "\0\u5755\0\u57a4\0\u57f3\0\u5842\0\u5891\0\u324d\0\u58e0\0\u592f" +
                    "\0\u04a1\0\u597e\0\u59cd\0\u5a1c\0\u5a6b\0\u5aba\0\u5b09\0\u5b58" +
                    "\0\u5ba7\0\u5bf6\0\u5c45\0\u5c94\0\u5ce3\0\u5d32\0\u5d81\0\u5dd0" +
                    "\0\u5e1f\0\u5e6e\0\u5ebd\0\u5f0c\0\u5f5b\0\u5faa\0\u5ff9\0\u6048" +
                    "\0\u6097\0\u60e6\0\u6135\0\u6184\0\u61d3\0\u6222\0\u6271\0\u62c0" +
                    "\0\u630f\0\u635e\0\u63ad\0\u63fc\0\u644b\0\u649a\0\u64e9\0\u6538" +
                    "\0\u6587\0\u65d6\0\u6625\0\u6674\0\u66c3\0\u6712\0\u6761\0\u67b0" +
                    "\0\u67ff\0\u684e\0\u689d\0\u68ec\0\u693b\0\u698a\0\u69d9\0\u6a28" +
                    "\0\u6a77\0\u6ac6\0\u6b15\0\u04a1\0\u6b64\0\u6bb3\0\u6c02\0\u6c51" +
                    "\0\u6ca0\0\u6cef\0\u6d3e\0\u6d8d\0\u6ddc\0\u6e2b\0\u6e7a\0\u6ec9" +
                    "\0\u6f18\0\u6f67\0\u6fb6\0\u7005\0\u7054\0\u70a3\0\u70f2\0\u28bc" +
                    "\0\u7141\0\u7190\0\u71df\0\u722e\0\u727d\0\u72cc\0\u731b\0\u736a" +
                    "\0\u73b9\0\u7408\0\u7457\0\u74a6\0\u74f5\0\u7544\0\u7593\0\u4f00" +
                    "\0\u75e2\0\u04a1\0\u7631\0\u7680\0\u76cf\0\u771e\0\u04a1\0\u5a6b" +
                    "\0\u776d\0\u77bc\0\u10f9\0\u780b\0\u785a\0\u78a9\0\u78f8\0\u7947" +
                    "\0\u7996\0\u10f9\0\u79e5\0\u7a34\0\u7a83\0\u7ad2\0\u7b21\0\u7b70" +
                    "\0\u7bbf\0\u7c0e\0\u7c5d\0\u7cac\0\u7cfb\0\u7d4a\0\u7d99\0\u7de8" +
                    "\0\u7e37\0\u7e86\0\u7ed5\0\u7f24\0\u10f9\0\u7f73\0\u7fc2\0\u8011" +
                    "\0\u8060\0\u80af\0\u80fe\0\u814d\0\u819c\0\u81eb\0\u823a\0\u8289" +
                    "\0\u82d8\0\u8327\0\u8376\0\u83c5\0\u8414\0\u8463\0\u84b2\0\u84b2" +
                    "\0\u8501\0\u8550\0\u859f\0\u85ee\0\u863d\0\u868c\0\u86db\0\u872a" +
                    "\0\u8779\0\u87c8\0\u8817\0\u8866\0\u88b5\0\u8904\0\u8953\0\u89a2" +
                    "\0\u5ce3\0\u89f1\0\u8a40\0\u8a8f\0\u8ade\0\u8b2d\0\u8b7c\0\u8bcb" +
                    "\0\u8c1a\0\u8c69\0\u8cb8\0\u8d07\0\u8d56\0\u8da5\0\u8df4\0\u8e43" +
                    "\0\u8e92\0\u8ee1\0\u8f30\0\u8f7f\0\u8fce\0\u901d\0\u906c\0\u90bb" +
                    "\0\u910a\0\u9159\0\u91a8\0\u91f7\0\u9246\0\u9295\0\u92e4\0\u9333" +
                    "\0\u9382\0\u93d1\0\u9420\0\u946f\0\u94be\0\u950d\0\u955c\0\u95ab" +
                    "\0\u95fa\0\u9649\0\u9698\0\u96e7\0\u9736\0\u9785\0\u97d4\0\u9823" +
                    "\0\u9872\0\u98c1\0\u1a8a\0\u9910\0\u995f\0\u99ae\0\u99fd\0\u9a4c" +
                    "\0\u9a9b\0\u9aea\0\u9b39\0\u9b88\0\u9bd7\0\u9c26\0\u9c75\0\u9cc4" +
                    "\0\u9d13\0\u9d62\0\u9db1\0\u9e00\0\u04a1\0\u9e4f";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[566];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpackTrans();

    private static final String ZZ_TRANS_PACKED_0 =
            "\1\16\1\17\1\20\1\21\1\22\1\23\111\16\2\24" +
                    "\1\25\43\24\1\26\50\24\2\27\1\30\52\27\1\31" +
                    "\41\27\2\32\1\33\14\32\1\34\77\32\1\35\1\36" +
                    "\1\0\1\35\1\22\2\35\1\37\1\40\6\35\1\41" +
                    "\6\35\1\42\1\43\67\35\2\44\1\0\1\44\1\45" +
                    "\2\44\2\45\1\46\1\47\1\50\1\51\1\52\1\53" +
                    "\1\45\3\44\1\54\2\44\2\45\1\55\1\50\1\53" +
                    "\1\56\1\54\5\44\1\57\2\60\1\61\11\44\1\46" +
                    "\1\47\1\51\1\52\1\62\1\63\1\56\1\44\1\64" +
                    "\1\65\1\55\1\44\1\66\1\67\1\70\1\71\2\44" +
                    "\1\61\1\62\1\66\1\63\1\65\1\57\1\44\1\71" +
                    "\1\44\1\70\1\44\1\64\2\44\27\72\1\73\67\72" +
                    "\26\74\1\75\70\74\1\35\1\36\1\0\1\35\1\22" +
                    "\2\35\1\37\1\76\6\35\1\77\6\35\1\100\1\101" +
                    "\67\35\27\72\1\102\67\72\26\74\1\103\70\74\1\104" +
                    "\1\22\1\105\1\106\1\22\1\107\1\110\1\111\1\112" +
                    "\3\113\1\114\2\113\1\115\1\113\1\116\1\117\1\113" +
                    "\1\116\1\104\1\120\1\121\1\122\1\123\1\124\1\125" +
                    "\1\126\1\116\1\127\1\113\1\111\3\113\1\130\1\113" +
                    "\1\131\1\132\1\133\1\110\1\134\2\111\2\37\1\135" +
                    "\1\136\1\137\1\140\2\113\1\141\11\113\1\116\1\113" +
                    "\1\142\1\143\2\113\1\144\1\145\1\146\2\113\1\147" +
                    "\1\150\3\113\2\151\1\152\35\151\1\153\56\151\2\16" +
                    "\4\0\112\16\1\17\2\0\1\22\1\0\111\16\127\0" +
                    "\1\154\6\155\1\0\5\155\3\0\6\155\3\0\5\155" +
                    "\6\0\1\156\1\157\1\0\1\160\37\155\1\0\1\22" +
                    "\2\0\1\22\112\0\4\23\1\0\1\23\1\161\110\23" +
                    "\2\24\1\0\43\24\1\0\50\24\46\0\1\162\50\0" +
                    "\2\27\1\0\52\27\1\0\41\27\17\0\1\163\77\0" +
                    "\2\32\1\0\14\32\1\0\77\32\2\35\1\0\1\35" +
                    "\1\0\2\35\2\0\6\35\1\0\6\35\2\0\70\35" +
                    "\1\36\1\0\1\35\1\22\2\35\2\0\6\35\1\0" +
                    "\6\35\2\0\67\35\17\0\1\41\77\0\2\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\71\44\1\0\1\44\1\0\2\44\2\0\1\44\1\164" +
                    "\2\44\1\165\1\166\1\0\6\44\2\0\1\167\1\44" +
                    "\1\166\12\44\1\170\12\44\1\164\1\44\1\165\1\171" +
                    "\1\172\2\44\1\173\1\44\1\167\7\44\1\170\1\171" +
                    "\1\44\1\172\7\44\1\173\4\44\1\0\1\44\1\0" +
                    "\2\44\2\0\3\44\1\174\2\44\1\0\6\44\2\0" +
                    "\15\44\1\175\13\44\1\174\1\44\1\176\1\177\14\44" +
                    "\1\175\1\176\1\44\1\177\14\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\1\200\40\44" +
                    "\1\200\27\44\1\0\1\44\1\0\2\44\2\0\1\201" +
                    "\5\44\1\0\6\44\2\0\3\44\1\202\6\44\1\203" +
                    "\2\204\12\44\1\201\5\44\1\202\1\44\1\205\16\44" +
                    "\1\203\5\44\1\205\4\44\1\0\1\44\1\0\2\44" +
                    "\2\0\2\44\1\206\3\44\1\0\6\44\2\0\1\44" +
                    "\1\206\10\44\1\207\20\44\1\210\16\44\1\210\3\44" +
                    "\1\207\12\44\1\0\1\44\1\0\2\44\2\0\2\44" +
                    "\1\67\1\211\1\44\1\67\1\0\3\44\1\212\2\44" +
                    "\2\0\1\44\2\67\1\44\1\212\6\44\2\213\1\214" +
                    "\13\44\1\211\1\44\1\215\4\44\1\67\5\44\1\216" +
                    "\2\44\1\214\1\215\2\44\1\67\2\44\1\216\10\44" +
                    "\1\0\1\44\1\0\2\44\2\0\2\44\1\67\1\205" +
                    "\2\44\1\0\6\44\2\0\1\217\1\67\10\44\1\220" +
                    "\16\44\1\205\1\44\1\221\1\222\3\44\1\223\1\217" +
                    "\1\224\7\44\1\221\1\44\1\222\1\223\1\220\4\44" +
                    "\1\224\5\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\12\44\1\67\43\44\1\67\12\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\15\44\1\225\15\44\1\226\1\227\14\44\1\225" +
                    "\1\226\1\44\1\227\14\44\1\0\1\44\1\0\2\44" +
                    "\2\0\3\44\1\230\2\44\1\0\6\44\2\0\15\44" +
                    "\1\231\13\44\1\230\1\44\1\232\15\44\1\231\1\232" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\2\44\1\233" +
                    "\1\234\2\44\1\0\6\44\2\0\1\44\1\233\27\44" +
                    "\1\234\2\44\1\235\17\44\1\235\14\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\37\44" +
                    "\1\236\5\44\1\237\14\44\1\237\1\44\1\236\4\44" +
                    "\1\0\1\44\1\0\2\44\2\0\1\240\1\241\1\242" +
                    "\1\44\1\243\1\44\1\0\3\44\1\244\2\44\2\0" +
                    "\1\245\1\242\2\44\1\244\22\44\1\240\1\241\1\44" +
                    "\1\243\5\44\1\246\1\245\13\44\1\246\13\44\1\0" +
                    "\1\44\1\0\2\44\2\0\4\44\1\247\1\44\1\0" +
                    "\3\44\1\250\2\44\2\0\1\251\3\44\1\250\5\44" +
                    "\1\67\17\44\1\247\6\44\1\251\14\44\1\67\12\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\1\252\14\44\1\253\15\44\1\254\5\44\1\252" +
                    "\7\44\1\253\1\254\16\44\1\0\1\44\1\0\2\44" +
                    "\2\0\3\44\1\255\1\44\1\67\1\0\6\44\2\0" +
                    "\2\44\1\67\7\44\1\67\2\256\1\257\13\44\1\255" +
                    "\1\44\1\260\4\44\1\67\10\44\1\257\1\260\2\44" +
                    "\2\67\12\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\3\44\1\261\2\44\2\0\4\44\1\261\10\44" +
                    "\1\262\33\44\1\262\17\44\1\0\1\44\1\0\2\44" +
                    "\2\0\3\44\1\263\2\44\1\0\6\44\2\0\31\44" +
                    "\1\263\1\44\1\264\16\44\1\264\16\44\1\0\1\44" +
                    "\1\0\2\44\2\0\2\44\1\67\2\44\1\265\1\0" +
                    "\6\44\2\0\1\44\1\67\1\265\2\44\1\67\7\44" +
                    "\1\266\31\44\1\67\1\44\1\266\15\44\27\72\1\0" +
                    "\67\72\26\74\1\0\70\74\17\0\1\267\77\0\1\104" +
                    "\10\0\6\104\1\0\6\104\2\0\6\104\1\0\1\104" +
                    "\1\0\5\104\11\0\40\104\3\0\1\270\3\0\1\37" +
                    "\1\271\113\0\1\37\1\0\1\37\116\0\1\37\116\0" +
                    "\1\37\1\272\27\0\1\273\56\0\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\3\113\1\275\2\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\7\0\1\37\7\0\1\276\77\0" +
                    "\1\277\10\0\6\277\1\0\1\277\2\116\1\277\1\116" +
                    "\1\277\2\0\5\277\1\116\1\0\1\277\1\0\1\277" +
                    "\1\300\2\301\1\302\1\0\1\303\7\0\11\277\1\301" +
                    "\6\277\1\116\1\277\1\302\3\277\1\301\1\300\11\277" +
                    "\10\0\6\277\1\0\1\277\1\304\1\305\1\277\1\305" +
                    "\1\277\2\0\5\277\1\305\1\0\1\277\1\0\1\306" +
                    "\1\300\2\301\1\302\1\0\1\303\7\0\11\277\1\301" +
                    "\6\277\1\305\1\277\1\302\3\277\1\301\1\300\6\277" +
                    "\1\306\1\277\2\307\1\310\22\307\1\311\1\312\70\307" +
                    "\2\121\1\0\22\121\1\313\1\121\1\314\67\121\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\3\113\1\315" +
                    "\2\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\22\113\1\316\15\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\1\113\1\317" +
                    "\4\113\1\0\1\113\1\0\5\113\11\0\31\113\1\320" +
                    "\1\321\5\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\1\322\5\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\323\1\324\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\113\1\325\4\113\1\0\1\113" +
                    "\1\0\5\113\11\0\25\113\1\326\4\113\1\327\5\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\1\330" +
                    "\5\113\1\0\1\113\1\0\5\113\11\0\2\113\1\331" +
                    "\20\113\1\332\1\113\1\333\1\113\1\334\10\113\7\0" +
                    "\1\37\36\0\1\37\71\0\2\303\1\0\1\303\10\0" +
                    "\1\303\41\0\1\303\26\0\1\37\42\0\1\37\44\0" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\1\335" +
                    "\1\113\1\336\3\113\1\0\1\113\1\0\5\113\11\0" +
                    "\30\113\1\337\1\340\1\341\5\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\23\113\1\342\1\113\1\343\1\113\1\344" +
                    "\1\113\1\345\6\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\3\113\1\346\2\113\1\0\1\113\1\0" +
                    "\3\113\1\347\1\113\11\0\1\350\34\113\1\351\2\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\1\352" +
                    "\1\353\4\113\1\0\1\113\1\0\5\113\11\0\23\113" +
                    "\1\354\14\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\6\113\1\0\1\113\1\0\5\113\11\0\23\113" +
                    "\1\355\14\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\3\113\1\356\2\113\1\0\1\113\1\0\5\113" +
                    "\11\0\1\357\26\113\1\360\3\113\1\361\2\113\1\362" +
                    "\1\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\4\113\1\363\1\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\22\113\1\364" +
                    "\2\113\1\365\12\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\366\12\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\2\113\1\367\26\113\1\370\6\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\23\113\1\333\1\113\1\371\12\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\25\113\1\372\12\113\2\151" +
                    "\1\0\35\151\1\0\56\151\10\0\1\373\117\0\6\374" +
                    "\1\0\5\374\3\0\6\374\3\0\5\374\11\0\40\374" +
                    "\11\0\6\155\1\0\5\155\3\0\6\155\3\0\5\155" +
                    "\11\0\40\155\46\0\1\375\61\0\6\155\1\0\5\155" +
                    "\3\0\6\155\3\0\5\155\11\0\1\155\1\376\36\155" +
                    "\17\0\1\377\77\0\2\44\1\0\1\44\1\0\2\44" +
                    "\2\0\2\44\1\u0100\3\44\1\0\6\44\2\0\1\44" +
                    "\1\u0100\67\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\33\44\1\u0101\16\44\1\u0101\16\44" +
                    "\1\0\1\44\1\0\2\44\2\0\2\44\1\u0102\3\44" +
                    "\1\0\6\44\2\0\1\44\1\u0102\34\44\1\200\22\44" +
                    "\1\200\7\44\1\0\1\44\1\0\2\44\2\0\4\44" +
                    "\1\67\1\44\1\0\3\44\1\67\2\44\2\0\4\44" +
                    "\1\67\25\44\1\67\36\44\1\0\1\44\1\0\2\44" +
                    "\2\0\1\44\1\u0103\1\u0104\3\44\1\0\6\44\2\0" +
                    "\1\44\1\u0104\10\44\1\u0105\15\44\1\u0103\25\44\1\u0105" +
                    "\12\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\37\44\1\u0106\24\44\1\u0106\4\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\1\u0107\40\44\1\u0107\27\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\33\44\1\u0108\16\44" +
                    "\1\u0108\16\44\1\0\1\44\1\0\2\44\2\0\5\44" +
                    "\1\u0109\1\0\6\44\2\0\2\44\1\u0109\66\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\3\44\1\u010a\31\44\1\u010a\33\44\1\0\1\44\1\0" +
                    "\2\44\2\0\4\44\1\u0103\1\44\1\0\6\44\2\0" +
                    "\3\44\1\u010b\26\44\1\u0103\2\44\1\u010b\33\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\12\44\1\u010c\24\44\1\u010d\1\u0109\14\44\1\u0109\1\u010c" +
                    "\5\44\1\u010d\4\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\12\44\1\u0109\43\44\1\u0109" +
                    "\12\44\1\0\1\44\1\0\2\44\2\0\3\44\1\u010e" +
                    "\2\44\1\0\6\44\2\0\31\44\1\u010e\37\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\67\3\44\1\u010f\1\44" +
                    "\1\0\6\44\2\0\27\44\1\67\2\44\1\u010f\36\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\33\44\1\u0110\16\44\1\u0110\16\44\1\0\1\44" +
                    "\1\0\2\44\2\0\2\44\1\u0111\3\44\1\0\6\44" +
                    "\2\0\1\44\1\u0111\67\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\42\44\1\67\20\44" +
                    "\1\67\5\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\15\44\1\67\16\44\1\u0112\14\44" +
                    "\1\67\2\44\1\u0112\14\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\33\44\1\u0113\16\44" +
                    "\1\u0113\16\44\1\0\1\44\1\0\2\44\2\0\2\44" +
                    "\1\u0114\3\44\1\0\6\44\2\0\1\44\1\u0114\67\44" +
                    "\1\0\1\44\1\0\2\44\2\0\5\44\1\200\1\0" +
                    "\6\44\2\0\2\44\1\200\34\44\1\u0109\24\44\1\u0109" +
                    "\4\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\34\44\1\222\17\44\1\222\14\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\34\44\1\u0115\17\44\1\u0115\14\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\11\44\1\u0116" +
                    "\53\44\1\u0116\3\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\3\44\1\200\2\44\2\0\4\44\1\200" +
                    "\64\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\15\44\1\u0117\33\44\1\u0117\17\44\1\0" +
                    "\1\44\1\0\2\44\2\0\5\44\1\u0118\1\0\6\44" +
                    "\2\0\2\44\1\u0118\66\44\1\0\1\44\1\0\2\44" +
                    "\2\0\3\44\1\u0119\2\44\1\0\6\44\2\0\31\44" +
                    "\1\u0119\2\44\1\u011a\17\44\1\u011a\14\44\1\0\1\44" +
                    "\1\0\2\44\2\0\1\u011b\5\44\1\0\6\44\2\0" +
                    "\27\44\1\u011b\41\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\40\44\1\u011c\14\44\1\u011c" +
                    "\13\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\34\44\1\67\17\44\1\67\14\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\u011d\5\44\1\0\6\44" +
                    "\2\0\27\44\1\u011d\41\44\1\0\1\44\1\0\2\44" +
                    "\2\0\1\u011e\5\44\1\0\6\44\2\0\27\44\1\u011e" +
                    "\41\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\45\44\1\67\14\44\1\67\6\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\u011f\5\44\1\0\3\44" +
                    "\1\264\2\44\2\0\4\44\1\264\5\44\1\203\2\u0120" +
                    "\1\u0121\11\44\1\u011f\21\44\1\u0121\4\44\1\203\12\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\3\44\1\u0122\31\44\1\u0122\33\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\42\44" +
                    "\1\u0123\20\44\1\u0123\5\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\3\44\1\u0124\2\44\2\0\4\44" +
                    "\1\u0124\31\44\1\u0125\22\44\1\u0125\7\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\33\44" +
                    "\1\u0126\16\44\1\u0126\16\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\15\44\1\u0127\24\44" +
                    "\1\u0128\6\44\1\u0127\11\44\1\u0128\5\44\1\0\1\44" +
                    "\1\0\2\44\2\0\2\44\1\u0129\3\44\1\0\6\44" +
                    "\2\0\1\44\1\u0129\1\44\1\u011e\30\44\1\u010a\1\u011e" +
                    "\16\44\1\u010a\14\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\3\44\1\u012a\2\44\2\0\4\44\1\u012a" +
                    "\64\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\15\44\1\u012b\33\44\1\u012b\17\44\1\0" +
                    "\1\44\1\0\2\44\2\0\3\44\1\u012c\2\44\1\0" +
                    "\6\44\2\0\31\44\1\u012c\37\44\1\0\1\44\1\0" +
                    "\2\44\2\0\2\44\1\u012d\3\44\1\0\6\44\2\0" +
                    "\1\44\1\u012d\67\44\1\0\1\44\1\0\2\44\2\0" +
                    "\5\44\1\u012e\1\0\6\44\2\0\2\44\1\u012e\12\44" +
                    "\1\u012f\33\44\1\u012f\17\44\1\0\1\44\1\0\2\44" +
                    "\2\0\4\44\1\u0130\1\44\1\0\6\44\2\0\32\44" +
                    "\1\u0130\36\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\3\44\1\264\2\44\2\0\4\44\1\264\64\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\40\44\1\u0131\14\44\1\u0131\13\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\40\44" +
                    "\1\u0132\14\44\1\u0132\13\44\1\0\1\44\1\0\2\44" +
                    "\2\0\5\44\1\u0133\1\0\6\44\2\0\2\44\1\u0133" +
                    "\66\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\50\44\1\u0105\20\44\1\0\1\44\1\0" +
                    "\2\44\2\0\5\44\1\u0134\1\0\6\44\2\0\2\44" +
                    "\1\u0134\66\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\12\44\1\u0135\43\44\1\u0135\12\44" +
                    "\1\0\1\44\1\0\2\44\2\0\5\44\1\u0136\1\0" +
                    "\6\44\2\0\2\44\1\u0136\1\u0137\31\44\1\u0137\33\44" +
                    "\1\0\1\44\1\0\2\44\2\0\2\44\1\u0138\1\44" +
                    "\1\67\1\44\1\0\6\44\2\0\1\44\1\u0138\30\44" +
                    "\1\67\36\44\1\0\1\44\1\0\2\44\2\0\2\44" +
                    "\1\67\3\44\1\0\6\44\2\0\1\44\1\67\31\44" +
                    "\1\u0139\11\44\1\67\4\44\1\u0139\7\44\1\67\6\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\3\44\1\67\31\44\1\67\33\44\1\0\1\44" +
                    "\1\0\2\44\2\0\5\44\1\u013a\1\0\6\44\2\0" +
                    "\2\44\1\u013a\7\44\1\67\43\44\1\67\12\44\1\0" +
                    "\1\44\1\0\2\44\2\0\5\44\1\u013b\1\0\6\44" +
                    "\2\0\2\44\1\u013b\66\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\40\44\1\67\14\44" +
                    "\1\67\13\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\36\44\1\u013c\22\44\1\u013c\7\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\40\44\1\u013d\14\44\1\u013d\13\44\1\0\1\44" +
                    "\1\0\2\44\2\0\2\44\1\67\3\44\1\0\6\44" +
                    "\2\0\1\44\1\67\67\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\37\44\1\u013e\24\44" +
                    "\1\u013e\4\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\33\44\1\u013f\16\44\1\u013f\14\44" +
                    "\11\0\1\u0140\45\0\1\u0140\37\0\2\272\1\0\114\272" +
                    "\40\0\1\u0141\56\0\1\104\10\0\6\104\1\0\6\104" +
                    "\2\0\1\u0142\5\104\1\0\1\104\1\0\5\104\11\0" +
                    "\41\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\3\113\1\u0143\1\113\11\0\40\113" +
                    "\7\0\1\37\7\0\1\111\77\0\1\277\10\0\6\277" +
                    "\1\0\6\277\2\0\6\277\1\0\1\277\1\0\5\277" +
                    "\11\0\41\277\10\0\6\277\1\0\1\277\2\u0144\1\277" +
                    "\1\u0144\1\277\2\0\5\277\1\u0144\1\0\1\277\1\0" +
                    "\5\277\1\u0145\3\0\1\u0145\4\0\20\277\1\u0144\20\277" +
                    "\10\0\6\277\1\0\1\277\2\303\1\277\1\303\1\277" +
                    "\2\0\5\277\1\303\1\0\1\277\1\0\2\277\2\301" +
                    "\1\302\11\0\11\277\1\301\6\277\1\303\1\277\1\302" +
                    "\3\277\1\301\12\277\10\0\6\277\1\0\1\277\2\304" +
                    "\1\277\1\304\1\277\2\0\5\277\1\304\1\0\1\277" +
                    "\1\0\2\277\2\301\1\302\1\0\1\303\7\0\11\277" +
                    "\1\301\6\277\1\304\1\277\1\302\3\277\1\301\12\277" +
                    "\10\0\6\277\1\0\1\277\1\304\1\305\1\277\1\305" +
                    "\1\277\2\0\5\277\1\305\1\0\1\277\1\0\1\277" +
                    "\1\u0146\2\301\1\302\1\0\1\303\7\0\11\277\1\301" +
                    "\6\277\1\305\1\277\1\302\3\277\1\301\1\u0146\11\277" +
                    "\10\0\1\277\1\u0147\4\277\1\0\1\277\4\u0147\1\277" +
                    "\2\0\4\277\2\u0147\1\0\1\277\1\0\2\277\3\u0147" +
                    "\11\0\1\277\1\u0147\2\277\1\u0147\4\277\1\u0147\6\277" +
                    "\1\u0147\1\277\2\u0147\2\277\1\u0147\11\277\2\u0148\1\0" +
                    "\23\u0148\1\u0149\70\u0148\26\0\1\u0149\70\0\2\u0148\1\0" +
                    "\17\u0148\1\u014a\1\u0148\1\u014b\1\307\1\310\1\307\1\u014c" +
                    "\4\307\1\u014a\6\u0148\1\307\32\u0148\1\u014b\17\u0148\2\u014d" +
                    "\1\0\17\u014d\1\121\1\u014d\1\121\1\u014e\2\121\1\u014f" +
                    "\5\121\6\u014d\1\121\32\u014d\1\121\17\u014d\1\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\6\113\1\0\1\113" +
                    "\1\0\5\113\11\0\22\113\1\u0150\15\113\1\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\2\113\1\u0151\3\113" +
                    "\1\0\1\113\1\0\5\113\11\0\40\113\1\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\1\u0152\5\113\1\0" +
                    "\1\113\1\0\5\113\11\0\23\113\1\u0153\6\113\1\347" +
                    "\5\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\1\113\1\u0154\4\113\1\0\1\113\1\0\5\113\11\0" +
                    "\2\113\1\u0155\35\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\3\113\1\u0156\34\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\27\113\1\u0157\10\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\30\113\1\347\7\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u0158\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\u0159\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\u015a\12\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u015b\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\3\113\1\u015c\2\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\3\113\1\u015d\2\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\27\113\1\u015e\10\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\1\113\1\347\4\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\u015f\12\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\3\113\1\u0160\34\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u0161\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\2\113\1\u0162\35\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\u0163\12\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\3\113\1\u0164\2\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u0165\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\1\u0166\37\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\3\113\1\u0167\2\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u0168\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u0169\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\2\113\1\u016a\3\113\1\0\1\113" +
                    "\1\0\5\113\11\0\1\u016b\37\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\2\113\1\u016c\2\113\11\0\6\113\1\u016d\31\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\3\113\1\u016e\34\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\4\113\1\u016f" +
                    "\1\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\2\113\1\u0170\22\113\1\u0171" +
                    "\12\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\1\113\1\u0172\4\113\1\0\1\113\1\0\5\113\11\0" +
                    "\1\113\1\u0173\36\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\6\113\1\347\31\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\1\u0174\5\113\1\0\1\113\1\0\5\113" +
                    "\11\0\40\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\6\113\1\0\1\113\1\0\5\113\11\0\1\113" +
                    "\1\u0175\36\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\6\113\1\0\1\113\1\0\5\113\11\0\1\u0166" +
                    "\37\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\23\113\1\u0176" +
                    "\14\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\2\113\1\u0177\3\113\1\0\1\113\1\0\5\113\11\0" +
                    "\3\113\1\u0178\34\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\1\u0179\37\113\1\104\10\0\6\113\1\0\5\113\1\274" +
                    "\2\0\4\113\1\u017a\1\113\1\0\1\113\1\0\3\113" +
                    "\1\u017b\1\113\11\0\27\113\1\u017c\10\113\1\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\1\u017d\5\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\3\113\1\u017e\2\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\2\113\1\u017f\3\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\2\113\1\u0180\35\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\2\113\1\u0181\24\113\1\u0182\10\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\2\113\1\u0183" +
                    "\3\113\1\0\1\113\1\0\5\113\11\0\40\113\46\0" +
                    "\1\u0184\61\0\6\155\1\0\5\155\3\0\1\155\1\u0185" +
                    "\4\155\3\0\5\155\11\0\40\155\2\44\1\0\1\44" +
                    "\1\0\2\44\2\0\3\44\1\u0186\2\44\1\0\6\44" +
                    "\2\0\31\44\1\u0186\37\44\1\0\1\44\1\0\2\44" +
                    "\2\0\1\44\1\u0125\4\44\1\0\6\44\2\0\3\44" +
                    "\1\67\24\44\1\u0125\4\44\1\67\33\44\1\0\1\44" +
                    "\1\0\2\44\2\0\3\44\1\u0187\2\44\1\0\6\44" +
                    "\2\0\31\44\1\u0187\2\44\1\u0188\17\44\1\u0188\14\44" +
                    "\1\0\1\44\1\0\2\44\2\0\5\44\1\u0189\1\0" +
                    "\6\44\2\0\2\44\1\u0189\66\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\45\44\1\u0125" +
                    "\14\44\1\u0125\6\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\15\44\1\u018a\33\44\1\u018a" +
                    "\17\44\1\0\1\44\1\0\2\44\2\0\4\44\1\67" +
                    "\1\44\1\0\6\44\2\0\32\44\1\67\36\44\1\0" +
                    "\1\44\1\0\2\44\2\0\2\44\1\u018b\3\44\1\0" +
                    "\6\44\2\0\1\44\1\u018b\67\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\12\44\1\u013e" +
                    "\43\44\1\u013e\12\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\15\44\1\67\33\44\1\67" +
                    "\17\44\1\0\1\44\1\0\2\44\2\0\5\44\1\u0125" +
                    "\1\0\6\44\2\0\2\44\1\u0125\66\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\45\44" +
                    "\1\u018c\14\44\1\u018c\6\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\42\44\1\u018d\20\44" +
                    "\1\u018d\5\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\37\44\1\u018e\24\44\1\u018e\4\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\3\44\1\u018f\31\44\1\u018f\33\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\1\u011e" +
                    "\40\44\1\u011e\27\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\36\44\1\u0125\22\44\1\u0125" +
                    "\7\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\33\44\1\u0190\16\44\1\u0190\16\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\42\44\1\u0132\20\44\1\u0132\5\44\1\0\1\44\1\0" +
                    "\2\44\2\0\3\44\1\u0191\2\44\1\0\6\44\2\0" +
                    "\31\44\1\u0191\37\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\33\44\1\u0129\16\44\1\u0129" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\34\44\1\u011e\17\44\1\u011e\14\44\1\0" +
                    "\1\44\1\0\2\44\2\0\5\44\1\u0192\1\0\6\44" +
                    "\2\0\2\44\1\u0192\66\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\33\44\1\261\16\44" +
                    "\1\261\16\44\1\0\1\44\1\0\2\44\2\0\5\44" +
                    "\1\u0193\1\0\6\44\2\0\2\44\1\u0193\66\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\44\1\u0194\4\44\1\0" +
                    "\6\44\2\0\30\44\1\u0194\40\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\u0195" +
                    "\33\44\1\u0195\17\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\36\44\1\67\22\44\1\67" +
                    "\7\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\34\44\1\u0196\17\44\1\u0196\14\44\1\0" +
                    "\1\44\1\0\2\44\2\0\5\44\1\67\1\0\6\44" +
                    "\2\0\2\44\1\67\66\44\1\0\1\44\1\0\2\44" +
                    "\2\0\1\44\1\164\4\44\1\0\6\44\2\0\30\44" +
                    "\1\164\40\44\1\0\1\44\1\0\2\44\2\0\2\44" +
                    "\1\u0197\3\44\1\0\6\44\2\0\1\44\1\u0197\67\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\37\44\1\u0198\24\44\1\u0198\4\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\43\44" +
                    "\1\67\7\44\1\67\15\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\15\44\1\u0199\33\44" +
                    "\1\u0199\17\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\15\44\1\u013e\33\44\1\u013e\17\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\15\44\1\264\33\44\1\264\17\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\37\44" +
                    "\1\u019a\24\44\1\u019a\4\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\12\44\1\u019b\43\44" +
                    "\1\u019b\12\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\1\u019c\40\44\1\u019c\27\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\37\44\1\67\24\44\1\67\4\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\261" +
                    "\33\44\1\261\17\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\3\44\1\u019d\31\44\1\u019d" +
                    "\33\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\40\44\1\u0109\14\44\1\u0109\13\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\34\44\1\u019e\17\44\1\u019e\14\44\1\0\1\44\1\0" +
                    "\2\44\2\0\3\44\1\u019f\2\44\1\0\6\44\2\0" +
                    "\31\44\1\u019f\37\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\33\44\1\67\16\44\1\67" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\12\44\1\u01a0\43\44\1\u01a0\12\44\1\0" +
                    "\1\44\1\0\2\44\2\0\3\44\1\223\2\44\1\0" +
                    "\6\44\2\0\31\44\1\223\37\44\1\0\1\44\1\0" +
                    "\2\44\2\0\2\44\1\u01a1\3\44\1\0\6\44\2\0" +
                    "\1\44\1\u01a1\67\44\1\0\1\44\1\0\2\44\2\0" +
                    "\3\44\1\u0193\2\44\1\0\6\44\2\0\31\44\1\u0193" +
                    "\10\44\1\u018d\20\44\1\u018d\5\44\1\0\1\44\1\0" +
                    "\2\44\2\0\4\44\1\u010f\1\44\1\0\6\44\2\0" +
                    "\32\44\1\u010f\36\44\1\0\1\44\1\0\2\44\2\0" +
                    "\5\44\1\u01a2\1\0\6\44\2\0\2\44\1\u01a2\66\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\15\44\1\264\15\44\1\67\15\44\1\264\1\67" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\1\67\40\44\1\67\27\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\43\44" +
                    "\1\67\1\u01a3\6\44\1\67\15\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\12\44\1\u01a4" +
                    "\43\44\1\u01a4\12\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\33\44\1\u01a5\16\44\1\u01a5" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\33\44\1\u01a6\16\44\1\u01a6\16\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\42\44\1\u01a7\20\44\1\u01a7\5\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\223" +
                    "\33\44\1\223\17\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\40\44\1\u01a8\14\44\1\u01a8" +
                    "\11\44\12\0\1\u01a9\45\0\1\u01a9\46\0\1\u01aa\106\0" +
                    "\1\104\10\0\1\104\1\u01ab\4\104\1\0\1\104\4\u01ab" +
                    "\1\104\2\0\4\104\2\u01ab\1\0\1\104\1\0\2\104" +
                    "\3\u01ab\11\0\1\104\1\u01ab\2\104\1\u01ab\4\104\1\u01ab" +
                    "\6\104\1\u01ab\1\104\2\u01ab\2\104\1\u01ab\12\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\6\113\1\0\1\113" +
                    "\1\0\5\113\11\0\2\113\1\u01ac\35\113\1\277\10\0" +
                    "\6\277\1\0\1\277\2\u0144\1\277\1\u0144\1\277\2\0" +
                    "\5\277\1\u0144\1\0\1\277\1\0\2\277\2\301\1\277" +
                    "\11\0\11\277\1\301\6\277\1\u0144\5\277\1\301\11\277" +
                    "\21\0\2\u0144\1\0\1\u0144\10\0\1\u0144\41\0\1\u0144" +
                    "\17\0\1\277\10\0\1\277\1\u0147\4\277\1\0\1\277" +
                    "\4\u0147\1\277\2\0\4\277\2\u0147\1\0\1\277\1\0" +
                    "\1\277\1\u0146\3\u0147\11\0\1\277\1\u0147\2\277\1\u0147" +
                    "\4\277\1\u0147\6\277\1\u0147\1\277\2\u0147\2\277\1\u0147" +
                    "\1\u0146\10\277\2\u0148\1\0\23\u0148\1\312\72\u0148\1\0" +
                    "\17\u0148\1\u014b\1\u0148\1\u014b\1\u0148\1\u0149\6\u0148\1\u014b" +
                    "\41\u0148\1\u014b\21\u0148\1\0\17\u0148\1\307\1\u0148\1\307" +
                    "\1\u0148\1\u0149\6\u0148\1\307\41\u0148\1\307\21\u0148\1\0" +
                    "\7\u0148\1\u01ad\6\u0148\4\u01ad\1\u0148\1\312\5\u0148\2\u01ad" +
                    "\5\u0148\3\u01ad\12\u0148\1\u01ad\2\u0148\1\u01ad\4\u0148\1\u01ad" +
                    "\6\u0148\1\u01ad\1\u0148\2\u01ad\2\u0148\1\u01ad\11\u0148\2\u014d" +
                    "\1\0\22\u014d\1\u01ae\1\u014d\1\u01af\67\u014d\2\121\1\0" +
                    "\22\121\1\313\1\121\1\u01b0\67\121\2\u014d\1\0\7\u014d" +
                    "\1\u01b1\6\u014d\4\u01b1\1\u01ae\1\u014d\1\u01af\4\u014d\2\u01b1" +
                    "\5\u014d\3\u01b1\12\u014d\1\u01b1\2\u014d\1\u01b1\4\u014d\1\u01b1" +
                    "\6\u014d\1\u01b1\1\u014d\2\u01b1\2\u014d\1\u01b1\11\u014d\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\1\357\37\113\1\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\1\u01b2\5\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\22\113\1\u01b3\15\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\3\113\1\u01b4\2\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\25\113\1\u01b5\12\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\1\347\37\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01b6\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\27\113\1\347\10\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\2\113\1\u01b7\35\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01b8\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\27\113\1\u01b9\10\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01ba\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\1\113\1\u01bb\36\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01bc\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\1\u0152\37\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u01bd\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\333\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u01be\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u0165\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\1\113\1\u01bd\4\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\1\113\1\u01bf\36\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\1\113\1\u017f\36\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\347\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u01c0\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\1\u01c1\37\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\1\u0155\37\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\1\113\1\u01ba\4\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\u01c2\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u01c3\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\2\113\1\u01c4\35\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u01c5\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\u01c6\1\113\1\u01c7\10\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\27\113\1\u01be\10\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\33\113\1\u01c8\4\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\2\113\1\u01c9\3\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\1\u01ca\37\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\24\113\1\u01cb\13\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\35\113\1\347\2\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01cc\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\27\113\1\u01cd\10\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01ce\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\25\113\1\u01c6\12\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\2\113\1\u01cf\3\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\u01d0\5\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u01d1\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\u01d2\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\4\113\1\u01d3\1\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\34\113\1\u01ba\3\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\31\113\1\347\6\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\27\113\1\u0166\10\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\26\113\1\347\11\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u01d4\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\25\113\1\347\12\113\11\0\6\155\1\0\5\155\3\0" +
                    "\6\155\3\0\5\155\11\0\2\155\1\u01d5\35\155\2\44" +
                    "\1\0\1\44\1\0\2\44\2\0\4\44\1\u011e\1\44" +
                    "\1\0\6\44\2\0\32\44\1\u011e\36\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\43\44" +
                    "\1\u0109\7\44\1\u0109\15\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\3\44\1\205\31\44" +
                    "\1\205\33\44\1\0\1\44\1\0\2\44\2\0\3\44" +
                    "\1\u0193\2\44\1\0\6\44\2\0\31\44\1\u0193\37\44" +
                    "\1\0\1\44\1\0\2\44\2\0\1\44\1\u011e\4\44" +
                    "\1\0\6\44\2\0\30\44\1\u011e\40\44\1\0\1\44" +
                    "\1\0\2\44\2\0\1\44\1\u0109\4\44\1\0\6\44" +
                    "\2\0\30\44\1\u0109\40\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\33\44\1\u01d6\16\44" +
                    "\1\u01d6\16\44\1\0\1\44\1\0\2\44\2\0\2\44" +
                    "\1\u01d7\3\44\1\0\6\44\2\0\1\44\1\u01d7\67\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\15\44\1\u01d8\15\44\1\u0199\15\44\1\u01d8\1\u0199" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\40\44\1\u01d9\14\44\1\u01d9\13\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\37\44\1\u0109\24\44\1\u0109\4\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\3\44\1\u01da" +
                    "\31\44\1\u01da\33\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\33\44\1\u01db\16\44\1\u01db" +
                    "\16\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\34\44\1\256\17\44\1\256\14\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\43\44\1\u01dc\7\44\1\u01dc\15\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\13\44\2\u01dd" +
                    "\54\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\1\u0199\40\44\1\u0199\27\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\33\44" +
                    "\1\u01de\16\44\1\u01de\16\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\3\44\1\261\31\44" +
                    "\1\261\33\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\15\44\1\u01df\33\44\1\u01df\17\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\40\44\1\u01e0\14\44\1\u01e0\13\44\1\0\1\44" +
                    "\1\0\2\44\2\0\2\44\1\u0109\3\44\1\0\6\44" +
                    "\2\0\1\44\1\u0109\67\44\1\0\1\44\1\0\2\44" +
                    "\2\0\5\44\1\u01e1\1\0\6\44\2\0\2\44\1\u01e1" +
                    "\66\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\3\44\1\u01e2\31\44\1\u01e2\33\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\44\1\200\4\44\1\0" +
                    "\6\44\2\0\30\44\1\200\40\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\u011e" +
                    "\33\44\1\u011e\17\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\15\44\1\u01e3\33\44\1\u01e3" +
                    "\17\44\1\0\1\44\1\0\2\44\2\0\3\44\1\u01e4" +
                    "\2\44\1\0\6\44\2\0\31\44\1\u01e4\37\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\1\u01e5\40\44\1\u01e5\27\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\34\44\1\205\17\44" +
                    "\1\205\14\44\1\0\1\44\1\0\2\44\2\0\3\44" +
                    "\1\u01e6\2\44\1\0\6\44\2\0\31\44\1\u01e6\37\44" +
                    "\1\0\1\44\1\0\2\44\2\0\5\44\1\u01e7\1\0" +
                    "\6\44\2\0\2\44\1\u01e7\7\44\1\u01e8\27\44\1\u01e9" +
                    "\13\44\1\u01e8\4\44\1\u01e9\5\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\256" +
                    "\33\44\1\256\15\44\13\0\1\u01ea\15\0\1\u01ea\65\0" +
                    "\1\104\10\0\1\104\1\u01eb\4\104\1\0\1\104\4\u01eb" +
                    "\1\104\2\0\4\104\2\u01eb\1\0\1\104\1\0\2\104" +
                    "\3\u01eb\11\0\1\104\1\u01eb\2\104\1\u01eb\4\104\1\u01eb" +
                    "\6\104\1\u01eb\1\104\2\u01eb\2\104\1\u01eb\12\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\3\113\1\u01ec\2\113" +
                    "\1\0\1\113\1\0\5\113\11\0\40\113\2\u0148\1\0" +
                    "\7\u0148\1\u01ed\6\u0148\4\u01ed\1\u0148\1\312\5\u0148\2\u01ed" +
                    "\5\u0148\3\u01ed\12\u0148\1\u01ed\2\u0148\1\u01ed\4\u0148\1\u01ed" +
                    "\6\u0148\1\u01ed\1\u0148\2\u01ed\2\u0148\1\u01ed\11\u0148\2\u014d" +
                    "\1\0\22\u014d\1\u01ae\73\u014d\1\0\7\u014d\1\u01ee\6\u014d" +
                    "\4\u01ee\1\u01ae\1\u014d\1\u01af\4\u014d\2\u01ee\5\u014d\3\u01ee" +
                    "\12\u014d\1\u01ee\2\u014d\1\u01ee\4\u014d\1\u01ee\6\u014d\1\u01ee" +
                    "\1\u014d\2\u01ee\2\u014d\1\u01ee\11\u014d\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\1\113\1\u01ef\4\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\1\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\6\113\1\0\1\113\1\0" +
                    "\5\113\11\0\1\u01f0\37\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\30\113\1\u01f1\7\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\25\113\1\u01f2\12\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\33\113\1\u0166\4\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\24\113\1\347\13\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01f3\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\2\113\1\u01f4\3\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\27\113\1\u01f5\10\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\2\113\1\u01ba\3\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\2\113\1\u01f6\35\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\31\113\1\u01f7\6\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\2\113\1\u01f8\35\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\2\113\1\347\3\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\113\1\u01f9\4\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01fa\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\3\113\1\u01fb\2\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\6\113\1\u01cd\31\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\113\1\u01c1\4\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01fc\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01d2\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01fd\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\22\113\1\u01fe\15\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\23\113\1\u01ff\14\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\3\113\1\u0200\34\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\3\113\1\u0201\2\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\113\1\u0202\4\113\1\0\1\113" +
                    "\1\0\5\113\11\0\40\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\6\113\1\0\1\113\1\0\5\113" +
                    "\11\0\34\113\1\u0203\3\113\1\104\10\0\6\113\1\0" +
                    "\5\113\1\274\2\0\1\u0204\5\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\u0166\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\27\113\1\u015b\10\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\2\113\1\370\3\113\1\0\1\113\1\0" +
                    "\5\113\11\0\40\113\11\0\6\155\1\0\5\155\3\0" +
                    "\6\155\3\0\5\155\11\0\3\155\1\u0205\34\155\2\44" +
                    "\1\0\1\44\1\0\2\44\2\0\1\67\5\44\1\0" +
                    "\6\44\2\0\27\44\1\67\41\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\34\44\1\u0206" +
                    "\17\44\1\u0206\14\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\3\44\1\u011e\31\44\1\u011e" +
                    "\33\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\15\44\1\u0207\33\44\1\u0207\17\44\1\0" +
                    "\1\44\1\0\2\44\2\0\5\44\1\u0208\1\0\6\44" +
                    "\2\0\2\44\1\u0208\66\44\1\0\1\44\1\0\2\44" +
                    "\2\0\2\44\1\u0209\3\44\1\0\6\44\2\0\1\44" +
                    "\1\u0209\67\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\44\44\1\u020a\24\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\34\44" +
                    "\1\u01d8\17\44\1\u01d8\14\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\37\44\1\u020b\24\44" +
                    "\1\u020b\4\44\1\0\1\44\1\0\2\44\2\0\1\u01a0" +
                    "\5\44\1\0\6\44\2\0\27\44\1\u01a0\41\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\u020c\5\44\1\0\6\44" +
                    "\2\0\27\44\1\u020c\41\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\36\44\1\u0129\22\44" +
                    "\1\u0129\7\44\1\0\1\44\1\0\2\44\2\0\1\u01d6" +
                    "\5\44\1\0\6\44\2\0\27\44\1\u01d6\41\44\1\0" +
                    "\1\44\1\0\2\44\2\0\1\44\1\u020d\4\44\1\0" +
                    "\6\44\2\0\30\44\1\u020d\40\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\15\44\1\u0109" +
                    "\33\44\1\u0109\17\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\12\44\1\u01d6\43\44\1\u01d6" +
                    "\12\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\15\44\1\u020e\33\44\1\u020e\17\44\1\0" +
                    "\1\44\1\0\2\44\2\0\3\44\1\225\2\44\1\0" +
                    "\6\44\2\0\31\44\1\225\37\44\1\0\1\44\1\0" +
                    "\2\44\2\0\2\44\1\u020f\3\44\1\0\6\44\2\0" +
                    "\1\44\1\u020f\65\44\14\0\1\u0210\44\0\1\u0210\35\0" +
                    "\1\104\10\0\1\104\1\u0211\4\104\1\0\1\104\4\u0211" +
                    "\1\104\2\0\4\104\2\u0211\1\0\1\104\1\0\2\104" +
                    "\3\u0211\11\0\1\104\1\u0211\2\104\1\u0211\4\104\1\u0211" +
                    "\6\104\1\u0211\1\104\2\u0211\2\104\1\u0211\12\104\10\0" +
                    "\6\113\1\0\5\113\1\274\2\0\6\113\1\0\1\113" +
                    "\1\0\5\113\11\0\2\113\1\u0212\35\113\2\u0148\1\0" +
                    "\7\u0148\1\u0213\6\u0148\4\u0213\1\u0148\1\312\5\u0148\2\u0213" +
                    "\5\u0148\3\u0213\12\u0148\1\u0213\2\u0148\1\u0213\4\u0148\1\u0213" +
                    "\6\u0148\1\u0213\1\u0148\2\u0213\2\u0148\1\u0213\11\u0148\2\u014d" +
                    "\1\0\7\u014d\1\u0214\6\u014d\4\u0214\1\u01ae\1\u014d\1\u01af" +
                    "\4\u014d\2\u0214\5\u014d\3\u0214\12\u014d\1\u0214\2\u014d\1\u0214" +
                    "\4\u014d\1\u0214\6\u014d\1\u0214\1\u014d\2\u0214\2\u014d\1\u0214" +
                    "\11\u014d\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\3\113\1\347\2\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\2\113\1\u0215" +
                    "\35\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\3\113\1\347\1\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\23\113\1\u0216" +
                    "\14\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\2\113\1\u0217" +
                    "\35\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\27\113\1\u0218" +
                    "\10\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\1\113\1\347" +
                    "\36\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\1\113\1\u0219\4\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\3\113\1\u021a\2\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\3\113\1\u021b\1\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\3\113\1\u021c\2\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\2\113\1\u021d" +
                    "\35\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\35\113\1\u021e" +
                    "\2\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\1\113\1\u021f" +
                    "\36\113\1\104\10\0\3\113\1\u0220\2\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\2\113\1\u0221" +
                    "\2\113\11\0\40\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\34\113\1\u0166\3\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\22\113\1\u01cd\15\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\26\113\1\u0155\11\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\23\113\1\u0222\14\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\34\113\1\u0160\3\113\1\104\10\0\6\113\1\0\5\113" +
                    "\1\274\2\0\6\113\1\0\1\113\1\0\5\113\11\0" +
                    "\27\113\1\u01c1\10\113\11\0\6\155\1\0\5\155\3\0" +
                    "\2\155\1\u0223\3\155\3\0\5\155\11\0\40\155\2\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\1\u0106\40\44\1\u0106\27\44\1\0\1\44\1\0" +
                    "\2\44\2\0\6\44\1\0\6\44\2\0\11\44\1\67" +
                    "\53\44\1\67\3\44\1\0\1\44\1\0\2\44\2\0" +
                    "\6\44\1\0\6\44\2\0\15\44\1\u0224\33\44\1\u0224" +
                    "\17\44\1\0\1\44\1\0\2\44\2\0\6\44\1\0" +
                    "\6\44\2\0\15\44\1\u012f\33\44\1\u012f\17\44\1\0" +
                    "\1\44\1\0\2\44\2\0\6\44\1\0\6\44\2\0" +
                    "\1\u0225\40\44\1\u0225\27\44\1\0\1\44\1\0\2\44" +
                    "\2\0\6\44\1\0\6\44\2\0\15\44\1\u01d6\33\44" +
                    "\1\u01d6\17\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\34\44\1\172\17\44\1\172\14\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\34\44\1\u013e\17\44\1\u013e\14\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\37\44" +
                    "\1\u0226\24\44\1\u0226\4\44\1\0\1\44\1\0\2\44" +
                    "\2\0\3\44\1\261\2\44\1\0\6\44\2\0\31\44" +
                    "\1\261\35\44\15\0\1\u0227\44\0\1\u0227\34\0\1\104" +
                    "\10\0\1\104\1\113\4\104\1\0\1\104\4\113\1\104" +
                    "\2\0\4\104\2\113\1\0\1\104\1\0\2\104\3\113" +
                    "\11\0\1\104\1\113\2\104\1\113\4\104\1\113\6\104" +
                    "\1\113\1\104\2\113\2\104\1\113\12\104\10\0\6\113" +
                    "\1\0\5\113\1\274\2\0\2\113\1\u0218\3\113\1\0" +
                    "\1\113\1\0\5\113\11\0\40\113\2\u0148\1\0\7\u0148" +
                    "\1\307\6\u0148\4\307\1\u0148\1\312\5\u0148\2\307\5\u0148" +
                    "\3\307\12\u0148\1\307\2\u0148\1\307\4\u0148\1\307\6\u0148" +
                    "\1\307\1\u0148\2\307\2\u0148\1\307\11\u0148\2\u014d\1\0" +
                    "\7\u014d\1\121\6\u014d\4\121\1\u01ae\1\u014d\1\u01af\4\u014d" +
                    "\2\121\5\u014d\3\121\12\u014d\1\121\2\u014d\1\121\4\u014d" +
                    "\1\121\6\u014d\1\121\1\u014d\2\121\2\u014d\1\121\11\u014d" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\5\113\11\0\22\113\1\u0228\15\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\3\113" +
                    "\1\u01ba\2\113\1\0\1\113\1\0\5\113\11\0\40\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\5\113\11\0\25\113\1\u01ef\12\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\5\113\11\0\32\113\1\347\5\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\5\113\11\0\25\113\1\u0229\12\113" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\1\u0166" +
                    "\5\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\23\113\1\u022a\14\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\1\113\1\u0156\36\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\2\113\1\u0200" +
                    "\3\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\22\113\1\u022b\15\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\2\113\1\u022c" +
                    "\3\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\3\113\1\u022d" +
                    "\2\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\27\113\1\u022e\10\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\1\113\1\u01c1\36\113\2\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\11\44\1\u011e\53\44\1\u011e\3\44\1\0\1\44" +
                    "\1\0\2\44\2\0\6\44\1\0\6\44\2\0\34\44" +
                    "\1\174\17\44\1\174\14\44\1\0\1\44\1\0\2\44" +
                    "\2\0\4\44\1\u022f\1\44\1\0\6\44\2\0\32\44" +
                    "\1\u022f\34\44\16\0\1\u0230\13\0\1\u0230\64\0\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\3\113\1\u01c1" +
                    "\2\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\3\113\1\u0231" +
                    "\2\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\1\113\1\u0166\36\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\3\113\1\u0232" +
                    "\2\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\22\113\1\u0181\15\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\2\113\1\u01cd" +
                    "\3\113\1\0\1\113\1\0\5\113\11\0\40\113\1\104" +
                    "\10\0\6\113\1\0\5\113\1\274\2\0\6\113\1\0" +
                    "\1\113\1\0\5\113\11\0\25\113\1\u0233\12\113\2\44" +
                    "\1\0\1\44\1\0\2\44\2\0\6\44\1\0\6\44" +
                    "\2\0\12\44\1\u0234\43\44\1\u0234\10\44\17\0\1\u0235" +
                    "\77\0\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\2\113\1\u0236" +
                    "\35\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\2\113\1\u0155\3\113\1\0\1\113\1\0\5\113\11\0" +
                    "\40\113\1\104\10\0\6\113\1\0\5\113\1\274\2\0" +
                    "\6\113\1\0\1\113\1\0\5\113\11\0\23\113\1\u022d" +
                    "\14\113\2\44\1\0\1\44\1\0\2\44\2\0\6\44" +
                    "\1\0\6\44\2\0\33\44\1\174\16\44\1\174\14\44" +
                    "\1\104\10\0\6\113\1\0\5\113\1\274\2\0\6\113" +
                    "\1\0\1\113\1\0\5\113\11\0\37\113\1\u022c";

    private static int[] zzUnpackTrans() {
        int[] result = new int[40606];
        int offset = 0;
        offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;

    /* error messages for the codes above */
    private static final String ZZ_ERROR_MSG[] = {
            "Unkown internal scanner error",
            "Error: could not match input",
            "Error: pushback value was too large"
    };

    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 =
            "\6\0\2\1\1\0\2\1\2\0\2\1\1\11\4\1" +
                    "\1\11\2\1\1\11\2\1\2\11\2\1\1\11\1\1" +
                    "\3\11\1\1\1\11\25\1\1\11\1\1\1\11\1\1" +
                    "\5\11\1\1\1\11\2\1\1\11\16\1\1\11\3\1" +
                    "\1\11\16\1\1\11\4\1\1\11\1\1\1\11\1\0" +
                    "\1\11\103\1\1\11\2\0\20\1\1\11\1\1\1\11" +
                    "\56\1\1\11\1\1\1\0\1\1\1\11\100\1\2\0" +
                    "\3\1\1\0\3\1\1\11\72\1\1\11\44\1\1\0" +
                    "\1\11\4\1\1\11\72\1\1\0\45\1\1\0\26\1" +
                    "\1\0\10\1\1\0\4\1\1\11\1\1";

    private static int[] zzUnpackAttribute() {
        int[] result = new int[566];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /** the input device */
    private java.io.Reader zzReader;

    /** the current state of the DFA */
    private int zzState;

    /** the current lexical state */
    private int zzLexicalState = YYINITIAL;

    /**
     * this buffer contains the current text to be matched and is the source of the yytext() string
     */
    private char zzBuffer[];

    /** the textposition at the last accepting state */
    private int zzMarkedPos;

    /** the current text position in the buffer */
    private int zzCurrentPos;

    /** startRead marks the beginning of the yytext() string in the buffer */
    private int zzStartRead;

    /**
     * endRead marks the last character in the buffer, that has been read from input
     */
    private int zzEndRead;

    /** zzAtEOF == true <=> the scanner is at the EOF */
    private boolean zzAtEOF;

    /* user code: */

    /**
     * Token type specific to HTMLTokenMaker; this signals that the user has ended a line with an unclosed HTML tag;
     * thus a new line is beginning still inside of the tag.
     */
    public static final int INTERNAL_INTAG = -1;

    /**
     * Token type specific to HTMLTokenMaker; this signals that the user has ended a line with an unclosed
     * <code>&lt;script&gt;</code> tag.
     */
    public static final int INTERNAL_INTAG_SCRIPT = -2;

    /**
     * Token type specifying we're in a double-qouted attribute in a script tag.
     */
    public static final int INTERNAL_ATTR_DOUBLE_QUOTE_SCRIPT = -3;

    /**
     * Token type specifying we're in a single-qouted attribute in a script tag.
     */
    public static final int INTERNAL_ATTR_SINGLE_QUOTE_SCRIPT = -4;

    /**
     * Token type specifying we're in JavaScript.
     */
    public static final int INTERNAL_IN_JS = -5;

    /**
     * Token type specifying we're in a JavaScript multiline comment.
     */
    public static final int INTERNAL_IN_JS_MLC = -6;

    /**
     * Whether closing markup tags are automatically completed for HTML.
     */
    private static boolean completeCloseTags;

    /**
     * Constructor. This must be here because JFlex does not generate a no-parameter constructor.
     */
    public HTMLTokenMaker() {
        super();
    }

    /**
     * Adds the token specified to the current linked list of tokens as an "end token;" that is, at
     * <code>zzMarkedPos</code>.
     * 
     * @param tokenType
     *            The token's type.
     */
    private void addEndToken(int tokenType) {
        addToken(zzMarkedPos, zzMarkedPos, tokenType);
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     * 
     * @param tokenType
     *            The token's type.
     */
    private void addToken(int tokenType) {
        addToken(zzStartRead, zzMarkedPos - 1, tokenType);
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     * 
     * @param tokenType
     *            The token's type.
     */
    private void addToken(int start, int end, int tokenType) {
        int so = start + offsetShift;
        addToken(zzBuffer, start, end, tokenType, so);
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     * 
     * @param array
     *            The character array.
     * @param start
     *            The starting offset in the array.
     * @param end
     *            The ending offset in the array.
     * @param tokenType
     *            The token's type.
     * @param startOffset
     *            The offset in the document at which this token occurs.
     */
    public void addToken(char[] array, int start, int end, int tokenType, int startOffset) {
        super.addToken(array, start, end, tokenType, startOffset);
        zzStartRead = zzMarkedPos;
    }

    /**
     * Sets whether markup close tags should be completed. You might not want this to be the case, since some tags in
     * standard HTML aren't usually closed.
     * 
     * @return Whether closing markup tags are completed.
     * @see #setCompleteCloseTags(boolean)
     */
    public boolean getCompleteCloseTags() {
        return completeCloseTags;
    }

    /**
     * Returns the first token in the linked list of tokens generated from <code>text</code>. This method must be
     * implemented by subclasses so they can correctly implement syntax highlighting.
     * 
     * @param text
     *            The text from which to get tokens.
     * @param initialTokenType
     *            The token type we should start with.
     * @param startOffset
     *            The offset into the document at which <code>text</code> starts.
     * @return The first <code>Token</code> in a linked list representing the syntax highlighted text.
     */
    public Token getTokenList(Segment text, int initialTokenType, int startOffset) {

        resetTokenList();
        this.offsetShift = -text.offset + startOffset;

        // Start off in the proper state.
        int state = Token.NULL;
        switch (initialTokenType) {
        case Token.COMMENT_MULTILINE:
            state = COMMENT;
            start = text.offset;
            break;
        case Token.PREPROCESSOR:
            state = PI;
            start = text.offset;
            break;
        case Token.VARIABLE:
            state = DTD;
            start = text.offset;
            break;
        case INTERNAL_INTAG:
            state = INTAG;
            start = text.offset;
            break;
        case INTERNAL_INTAG_SCRIPT:
            state = INTAG_SCRIPT;
            start = text.offset;
            break;
        case Token.LITERAL_STRING_DOUBLE_QUOTE:
            state = INATTR_DOUBLE;
            start = text.offset;
            break;
        case Token.LITERAL_CHAR:
            state = INATTR_SINGLE;
            start = text.offset;
            break;
        case INTERNAL_ATTR_DOUBLE_QUOTE_SCRIPT:
            state = INATTR_DOUBLE_SCRIPT;
            start = text.offset;
            break;
        case INTERNAL_ATTR_SINGLE_QUOTE_SCRIPT:
            state = INATTR_SINGLE_SCRIPT;
            start = text.offset;
            break;
        case INTERNAL_IN_JS:
            state = JAVASCRIPT;
            start = text.offset;
            break;
        case INTERNAL_IN_JS_MLC:
            state = JS_MLC;
            start = text.offset;
            break;
        default:
            state = Token.NULL;
        }

        s = text;
        try {
            yyreset(zzReader);
            yybegin(state);
            return yylex();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            return new DefaultToken();
        }

    }

    /**
     * Sets whether markup close tags should be completed. You might not want this to be the case, since some tags in
     * standard HTML aren't usually closed.
     * 
     * @param complete
     *            Whether closing markup tags are completed.
     * @see #getCompleteCloseTags()
     */
    public static void setCompleteCloseTags(boolean complete) {
        completeCloseTags = complete;
    }

    /**
     * Refills the input buffer.
     * 
     * @return <code>true</code> if EOF was reached, otherwise <code>false</code>.
     */
    private boolean zzRefill() {
        return zzCurrentPos >= s.offset + s.count;
    }

    /**
     * Resets the scanner to read from a new input stream. Does not close the old reader.
     * 
     * All internal variables are reset, the old input stream <b>cannot</b> be reused (internal buffer is discarded and
     * lost). Lexical state is set to <tt>YY_INITIAL</tt>.
     * 
     * @param reader
     *            the new input stream
     */
    public final void yyreset(java.io.Reader reader) {
        // 's' has been updated.
        zzBuffer = s.array;
        /*
         * We replaced the line below with the two below it because zzRefill no longer "refills" the buffer (since the
         * way we do it, it's always "full" the first time through, since it points to the segment's array). So, we
         * assign zzEndRead here.
         */
        // zzStartRead = zzEndRead = s.offset;
        zzStartRead = s.offset;
        zzEndRead = zzStartRead + s.count - 1;
        zzCurrentPos = zzMarkedPos = s.offset;
        zzLexicalState = YYINITIAL;
        zzReader = reader;
        zzAtEOF = false;
    }

    /**
     * Creates a new scanner There is also a java.io.InputStream version of this constructor.
     * 
     * @param in
     *            the java.io.Reader to read input from.
     */
    public HTMLTokenMaker(java.io.Reader in) {
        this.zzReader = in;
    }

    /**
     * Creates a new scanner. There is also java.io.Reader version of this constructor.
     * 
     * @param in
     *            the java.io.Inputstream to read input from.
     */
    public HTMLTokenMaker(java.io.InputStream in) {
        this(new java.io.InputStreamReader(in));
    }

    /**
     * Unpacks the compressed character translation table.
     * 
     * @param packed
     *            the packed character translation table
     * @return the unpacked character translation table
     */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x10000];
        int i = 0; /* index in packed string */
        int j = 0; /* index in unpacked array */
        while (i < 194) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do
                map[j++] = value;
            while (--count > 0);
        }
        return map;
    }

    /**
     * Closes the input stream.
     */
    public final void yyclose() throws java.io.IOException {
        zzAtEOF = true; /* indicate end of file */
        zzEndRead = zzStartRead; /* invalidate buffer */

        if (zzReader != null)
            zzReader.close();
    }

    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }

    /**
     * Enters a new lexical state
     * 
     * @param newState
     *            the new lexical state
     */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }

    /**
     * Returns the text matched by the current regular expression.
     */
    public final String yytext() {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }

    /**
     * Returns the character at position <tt>pos</tt> from the matched text.
     * 
     * It is equivalent to yytext().charAt(pos), but faster
     * 
     * @param pos
     *            the position of the character to fetch. A value from 0 to yylength()-1.
     * 
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBuffer[zzStartRead + pos];
    }

    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }

    /**
     * Reports an error that occured while scanning.
     * 
     * In a wellformed scanner (no or only correct usage of yypushback(int) and a match-all fallback rule) this method
     * will only be called with things that "Can't Possibly Happen". If this method is called, something is seriously
     * wrong (e.g. a JFlex bug producing a faulty scanner etc.).
     * 
     * Usual syntax/scanner level error handling should be done in error fallback rules.
     * 
     * @param errorCode
     *            the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }

    /**
     * Pushes the specified amount of characters back into the input stream.
     * 
     * They will be read again by then next call of the scanning method
     * 
     * @param number
     *            the number of characters to be read again. This number must not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }

    /**
     * Resumes scanning until the next regular expression is matched, the end of input is encountered or an I/O-Error
     * occurs.
     * 
     * @return the next token
     * @exception java.io.IOException
     *                if any I/O-Error occurs
     */
    public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException {
        int zzInput;
        int zzAction;

        // cached fields:
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        char[] zzBufferL = zzBuffer;
        char[] zzCMapL = ZZ_CMAP;

        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while (true) {
            zzMarkedPosL = zzMarkedPos;

            zzAction = -1;

            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

            zzState = zzLexicalState;

            zzForAction: {
                while (true) {

                    if (zzCurrentPosL < zzEndReadL)
                        zzInput = zzBufferL[zzCurrentPosL++];
                    else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    }
                    else {
                        // store back cached positions
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        // get translated positions and possibly new buffer
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        }
                        else {
                            zzInput = zzBufferL[zzCurrentPosL++];
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if (zzNext == -1)
                        break zzForAction;
                    zzState = zzNext;

                    int zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8)
                            break zzForAction;
                    }

                }
            }

            // store back cached position
            zzMarkedPos = zzMarkedPosL;

            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 2: {
                addToken(Token.IDENTIFIER);
            }
            case 58:
                case 114:
                case 113:
                case 112:
                case 111:
                case 110:
                case 109:
                case 108:
                case 107:
                case 106:
                case 105:
                case 104:
                case 103:
                case 102:
                case 101:
                case 100:
                case 99:
                case 98:
                case 97:
                case 96:
                case 95:
                case 94:
                case 93:
                case 92:
                case 91:
                case 90:
                case 89:
                case 88:
                case 87:
                case 86:
                case 85:
                case 84:
                case 83:
                case 82:
                case 81:
                case 80:
                case 79:
                case 78:
                case 77:
                case 76:
                case 75:
                case 74:
                case 73:
                case 72:
                case 71:
                case 70:
                case 69:
                case 68:
                case 67:
                case 66:
                case 65:
                case 64:
                case 63:
                case 62:
                case 61:
                case 60:
                case 59:
                    break;
            case 25: {
                yybegin(INTAG_SCRIPT);
                addToken(start, zzStartRead, Token.LITERAL_STRING_DOUBLE_QUOTE);
            }
                case 54: {
                addToken(Token.LITERAL_BOOLEAN);
            }
                case 44: {
                addToken(Token.ERROR_CHAR);
            }
                case 41: {
                addToken(Token.ERROR_NUMBER_FORMAT);
            }
                case 23: {
                start = zzMarkedPos - 1;
                yybegin(INATTR_SINGLE_SCRIPT);
            }
                case 34: {
                int count = yylength();
                addToken(zzStartRead, zzStartRead, Token.MARKUP_TAG_DELIMITER);
                zzMarkedPos -= (count - 1); // yypushback(count-1);
                yybegin(INTAG_CHECK_TAG_NAME);
            }
                case 14: {
                yybegin(YYINITIAL);
                addToken(Token.MARKUP_TAG_DELIMITER);
            }
                case 9: {
                addToken(start, zzStartRead - 1, Token.VARIABLE);
                return firstToken;
            }
                case 45: {
                addToken(Token.LITERAL_STRING_DOUBLE_QUOTE);
            }
                case 33: {
                addToken(start, zzStartRead - 1, Token.COMMENT_MULTILINE);
                addEndToken(INTERNAL_IN_JS_MLC);
                return firstToken;
            }
                case 55: {
                addToken(Token.FUNCTION);
            }
                case 39: {
                addToken(Token.COMMENT_EOL);
                addEndToken(INTERNAL_IN_JS);
                return firstToken;
            }
                case 28: {
                addEndToken(INTERNAL_IN_JS);
                return firstToken;
            }
                case 35: {
                start = zzMarkedPos - 2;
                yybegin(DTD);
            }
                case 57: {
                yybegin(YYINITIAL);
                addToken(zzStartRead, zzStartRead + 1, Token.MARKUP_TAG_DELIMITER);
                addToken(zzMarkedPos - 7, zzMarkedPos - 2, Token.MARKUP_TAG_NAME);
                addToken(zzMarkedPos - 1, zzMarkedPos - 1, Token.MARKUP_TAG_DELIMITER);
            }
                case 30: {
                addToken(Token.ERROR_CHAR);
                addEndToken(INTERNAL_IN_JS);
                return firstToken;
            }
                case 18: { /* Shouldn't happen */
                yypushback(1);
                yybegin(INTAG);
            }
                case 27: {
                addToken(Token.ERROR_IDENTIFIER);
            }
                case 40: {
                start = zzMarkedPos - 2;
                yybegin(JS_MLC);
            }
                case 21: {
                yybegin(INTAG);
                addToken(start, zzStartRead, Token.LITERAL_CHAR);
            }
                case 4: {
                addToken(Token.MARKUP_TAG_DELIMITER);
                yybegin(INTAG);
            }
                case 10: {
                yybegin(YYINITIAL);
                addToken(start, zzStartRead, Token.VARIABLE);
            }
                case 47: {
                yybegin(JAVASCRIPT);
                addToken(start, zzStartRead + 1, Token.COMMENT_MULTILINE);
            }
                case 37: {
                yybegin(YYINITIAL);
                addToken(start, zzStartRead + 1, Token.PREPROCESSOR);
            }
                case 50: {
                addToken(Token.LITERAL_CHAR);
            }
                case 36: {
                start = zzMarkedPos - 2;
                yybegin(PI);
            }
                case 16: {
                start = zzMarkedPos - 1;
                yybegin(INATTR_DOUBLE);
            }
                case 43: {
                addToken(Token.LITERAL_NUMBER_HEXADECIMAL);
            }
                case 17: { /* A non-recognized HTML tag name */
                yypushback(yylength());
                yybegin(INTAG);
            }
                case 24: {
                start = zzMarkedPos - 1;
                yybegin(INATTR_DOUBLE_SCRIPT);
            }
                case 5: {
                addToken(Token.WHITESPACE);
            }
                case 6: {
                addToken(Token.DATA_TYPE);
            }
                case 19: {
                addToken(Token.MARKUP_TAG_NAME);
            }
                case 29: {
                addToken(Token.LITERAL_NUMBER_DECIMAL_INT);
            }
                case 15: {
                start = zzMarkedPos - 1;
                yybegin(INATTR_SINGLE);
            }
                case 11: {
                addToken(Token.MARKUP_TAG_ATTRIBUTE);
            }
                case 20: {
                yybegin(INTAG);
                addToken(start, zzStartRead, Token.LITERAL_STRING_DOUBLE_QUOTE);
            }
                case 26: {
                yybegin(INTAG_SCRIPT);
                addToken(start, zzStartRead, Token.LITERAL_CHAR);
            }
                case 51: {
                start = zzMarkedPos - 4;
                yybegin(COMMENT);
            }
                case 46: {
                addToken(Token.RESERVED_WORD);
            }
                case 56: {
                addToken(zzStartRead, zzStartRead, Token.MARKUP_TAG_DELIMITER);
                addToken(zzMarkedPos - 6, zzMarkedPos - 1, Token.MARKUP_TAG_NAME);
                start = zzMarkedPos;
                yybegin(INTAG_SCRIPT);
            }
                case 49: {
                yybegin(YYINITIAL);
                addToken(start, zzStartRead + 2, Token.COMMENT_MULTILINE);
            }
                case 48: {
                int count = yylength();
                addToken(zzStartRead, zzStartRead + 1, Token.MARKUP_TAG_DELIMITER);
                zzMarkedPos -= (count - 2); // yypushback(count-2);
                yybegin(INTAG_CHECK_TAG_NAME);
            }
                case 32: {
                addToken(Token.SEPARATOR);
            }
                case 31: {
                addToken(Token.ERROR_STRING_DOUBLE);
                addEndToken(INTERNAL_IN_JS);
                return firstToken;
            }
                case 3: {
                addNullToken();
                return firstToken;
            }
                case 22: {
                yybegin(JAVASCRIPT);
                addToken(Token.MARKUP_TAG_DELIMITER);
            }
                case 38: {
                addToken(Token.MARKUP_TAG_DELIMITER);
                yybegin(YYINITIAL);
            }
                case 7: {
                addToken(start, zzStartRead - 1, Token.COMMENT_MULTILINE);
                return firstToken;
            }
                case 12: {
                addToken(Token.OPERATOR);
            }
                case 42: {
                addToken(Token.LITERAL_NUMBER_FLOAT);
            }
                case 13: {
                addToken(Token.MARKUP_TAG_DELIMITER);
            }
                case 52: {
                addToken(Token.COMMENT_MULTILINE);
            }
                case 8: {
                addToken(start, zzStartRead - 1, Token.PREPROCESSOR);
                return firstToken;
            }
                case 53: {
                addToken(Token.ERROR_STRING_DOUBLE);
            }
                case 1: {
            }
                default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    switch (zzLexicalState) {
                    case INTAG_CHECK_TAG_NAME:
                        case INTAG: {
                        addToken(zzMarkedPos, zzMarkedPos, INTERNAL_INTAG);
                        return firstToken;
                    }
                    case 567:
                        case 579:
                        case 578:
                        case 577:
                        case 576:
                        case 575:
                        case 574:
                        case 573:
                        case 572:
                        case 571:
                        case 570:
                        case 569:
                        case 568:
                            break;
                    case JS_MLC: {
                        addToken(start, zzStartRead - 1, Token.COMMENT_MULTILINE);
                        addEndToken(INTERNAL_IN_JS_MLC);
                        return firstToken;
                    }
                        case INTAG_SCRIPT: {
                        addToken(zzMarkedPos, zzMarkedPos, INTERNAL_INTAG_SCRIPT);
                        return firstToken;
                    }
                        case INATTR_DOUBLE_SCRIPT: {
                        addToken(start, zzStartRead - 1, Token.LITERAL_STRING_DOUBLE_QUOTE);
                        addEndToken(INTERNAL_ATTR_DOUBLE_QUOTE_SCRIPT);
                        return firstToken;
                    }
                        case INATTR_SINGLE_SCRIPT: {
                        addToken(start, zzStartRead - 1, Token.LITERAL_STRING_DOUBLE_QUOTE);
                        addEndToken(INTERNAL_ATTR_SINGLE_QUOTE_SCRIPT);
                        return firstToken;
                    }
                        case DTD: {
                        addToken(start, zzStartRead - 1, Token.VARIABLE);
                        return firstToken;
                    }
                        case INATTR_SINGLE: {
                        addToken(start, zzStartRead - 1, Token.LITERAL_CHAR);
                        return firstToken;
                    }
                        case INATTR_DOUBLE: {
                        addToken(start, zzStartRead - 1, Token.LITERAL_STRING_DOUBLE_QUOTE);
                        return firstToken;
                    }
                        case YYINITIAL: {
                        addNullToken();
                        return firstToken;
                    }
                        case COMMENT: {
                        addToken(start, zzStartRead - 1, Token.COMMENT_MULTILINE);
                        return firstToken;
                    }
                        case JAVASCRIPT: {
                        addEndToken(INTERNAL_IN_JS);
                        return firstToken;
                    }
                        case PI: {
                        addToken(start, zzStartRead - 1, Token.PREPROCESSOR);
                        return firstToken;
                    }
                        default:
                        return null;
                    }
                }
                else {
                    zzScanError(ZZ_NO_MATCH);
                }
            }
        }
    }

}
