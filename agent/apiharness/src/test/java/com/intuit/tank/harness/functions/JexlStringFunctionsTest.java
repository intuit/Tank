/**
 * Copyright 2011 Intuit Inc. All Rights Reserved
 */
package com.intuit.tank.harness.functions;

/*
 * #%L
 * Intuit Tank Agent (apiharness)
 * %%
 * Copyright (C) 2011 - 2015 Intuit Inc.
 * %%
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * #L%
 */

import com.intuit.tank.harness.test.data.Variables;
import com.intuit.tank.test.TestGroups;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.*;

/**
 * JexlStringFunctionsTest
 * 
 * @author dangleton
 * @author rchalmela
 * 
 */
public class JexlStringFunctionsTest {
    private Variables variables;
    public static final String NAME = "Test Name";
    public static final String NAME_1 = "Other Name";
    public static final String ADJECTIVE = "nice";

    static Stream<Arguments> concats() {
        return Stream.of(
                Arguments.of("Hello #{name}, I want you to meet #{name1}. #{stringFunctions.concat('She ', 'is ', adjective, '.')}",
                        "Hello Test Name, I want you to meet Other Name. She is nice." ),
                Arguments.of( "No Replacements", "No Replacements" ),
                Arguments.of( "#{stringFunctions.concat('hello there', '.')}", "hello there." )
        );
    }

    static Stream<Arguments> substrings() {
        return Stream.of(
                Arguments.of( "#{stringFunctions.substringBetween('yabcz', 'y', 'z')}", "abc" ),
                Arguments.of( "#{stringFunctions.substringBetween('yabcz ydefz', 'y', 'z', 1)}", "def" ),
                Arguments.of( "#{stringFunctions.substringBetween('yabcz', null, 'z')}", "yabc" ),
                Arguments.of( "#{stringFunctions.substringBetween('yabcz', 'y', null)}", "abcz" ),
                Arguments.of( "#{stringFunctions.substringBetween('yabcz', null, null)}", "" )
            );
    }

    static Stream<Arguments> replaceBetween() {
        return Stream.of(
                Arguments.of( "#{stringFunctions.replaceBetween('', "
                                +
                                "'\"SocialSecurityNumber\":\"', '\"', '123-45-6789', true)}",
                        "" ),

                Arguments.of( "#{stringFunctions.replaceBetween('VGhpcyBpcyBhIHNpbXBsZSB0ZXN0', 'is a ', ' test', 'complex', true)}",
                        "VGhpcyBpcyBhIGNvbXBsZXggdGVzdA==" ),
                Arguments.of( "#{stringFunctions.replaceBetween('This is a simple test', 'is a ', ' test', 'complex', false)}",
                        "This is a complex test" ),
                Arguments.of( "#{stringFunctions.replaceBetween('This is a simple test', 'bogus ', ' test', 'complex', false)}",
                        "This is a simple test" ),
                Arguments.of( "#{stringFunctions.replaceBetween('This is a simple test', 'is a ', ' bogus', 'complex', false)}",
                        "This is a simple test" ),
                Arguments.of( "#{stringFunctions.replaceBetween('This is a simple test', 'is a ', ' bogus', 'bogus', false)}",
                        "This is a simple test" ),
                Arguments.of( "#{stringFunctions.replaceBetween(null, 'is a ', ' bogus', 'complex', false)}", "" )
        );
    }

    @BeforeEach
    public void init() {
        variables = new Variables();
        variables.addVariable("name", NAME);
        variables.addVariable("name1", NAME_1);
        variables.addVariable("adjective", ADJECTIVE);
    }

    @ParameterizedTest
    @Tag(TestGroups.FUNCTIONAL)
    @MethodSource("replaceBetween")
    public void testReplaceBetween(String expression, String expected) {
        String evaluated = variables.evaluate(expression);
        assertEquals(evaluated, expected);
    }

    @ParameterizedTest
    @Tag(TestGroups.FUNCTIONAL)
    @MethodSource("substrings")
    public void testSubstringBetween(String expression, String expected) {
        String evaluated = variables.evaluate(expression);
        assertEquals(evaluated, expected);
    }

    @ParameterizedTest
    @Tag(TestGroups.FUNCTIONAL)
    @MethodSource("concats")
    public void testConcat(String expression, String expected) {
        String evaluated = variables.evaluate(expression);
        assertEquals(evaluated, expected);
    }

    @ParameterizedTest
    @Tag(TestGroups.FUNCTIONAL)
    @CsvSource({"5, 5" , "4, 4" , "3, 3" , "2, 2" , "1, 1"})
    public void testRandom(Integer len, Integer expLen) {

        int length = len.intValue();
        int expLength = expLen.intValue();

        String returned = variables.evaluate("#{stringFunctions.randomAlphaLower(" + length + ")}");
        assertEquals(returned.length(), expLength);

        returned = variables.evaluate("#{stringFunctions.randomAlphaUpper(" + length + ")}");
        assertEquals(returned.length(), expLength);

        returned = variables.evaluate("#{stringFunctions.randomAlphaMixed(" + length + ")}");
        assertEquals(returned.length(), expLength);

        returned = variables.evaluate("#{stringFunctions.randomAlphaMixed(" + length + ")}");
        assertEquals(returned.length(), expLength);

        returned = variables.evaluate("#{stringFunctions.randomAlphaMixedNumeric(" + length + ")}");
        assertEquals(returned.length(), expLength);

        returned = variables.evaluate("#{stringFunctions.randomAlphaMixedSpecial(" + length + ")}");
        assertEquals(returned.length(), expLength);

    }

    @Test
    @Tag(TestGroups.FUNCTIONAL)
    public void testBase64() {
        String evaluated = variables.evaluate("#{stringFunctions.toBase64('hello')}");
        assertNotNull(evaluated);
        String decoded = variables.evaluate("#{stringFunctions.fromBase64('" + evaluated + "')}");
        assertEquals(decoded, "hello");
    }

    @Test
    @Tag(TestGroups.FUNCTIONAL)
    public void testUrlEncode() {
        String evaluated = variables.evaluate("#{stringFunctions.urlEncode('&hello')}");
        assertNotNull(evaluated);
        String decoded = variables.evaluate("#{stringFunctions.urlDecode('" + evaluated + "')}");
        assertEquals(decoded, "&hello");
    }
    
    @Test
    @Tag(TestGroups.FUNCTIONAL)
    public void testConcatVar() {
        String evaluated = variables.evaluate("#{stringFunctions.concat('Turbo', 'Scale ', name)}");
        assertNotNull(evaluated);
    }
}
