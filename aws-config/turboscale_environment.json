{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates a Turboscale controller and agent instance and RDS instances for use in turboscale.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    
    "IamRole": {
      "Description" : "The IAM role to use for these instances.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255"
    },

    "SecretKeyIdProperty": {
      "Description" : "The system property to use to get the AWS secret key id.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "Default": "AWS_SECRET_KEY_ID"
    },

    "SecretKeyId": {
      "Description" : "The amazon secret key id to use for AWS communications.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255"
    },

    "SecretKeyProperty": {
      "Description" : "The system property to use to get the AWS secret key.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "Default": "AWS_SECRET_KEY"
    },

    "CreateRdsInstance" : {
      "Description" : "The password to use for the admin account in rds.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "5",
      "Default" : "true",
      "AllowedValues" : ["true", "false"],
      "ConstraintDescription" : "either true or false."
    },

    "RdsDbName" : {
      "Description" : "The name of the database to use.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "Default": "wats"
    },

    "RdsPassword" : {
      "Description" : "The password to use for the admin account in rds. Please escape all non-alpha characters using backslash (\\).",
      "Type": "String",
      "MinLength": "5",
      "MaxLength": "255",
      "ConstraintDescription" : "Must be at least 5 characters long."
    },

    "SecretKey": {
      "Description" : "The amazon secret key to use for AWS communications.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255"
    },


    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge",
      "m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","c3.xlarge","c3.2xlarge", "c3.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
     
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "[AMI-ID]" },
      "us-west-1"      : { "AMI" : "[AMI-ID]" }
    },

    "InstanceMap" : {
      "t1.micro"    : { "JvmHeap" : "512m", "MaxPermSize" :  "96m"},
      "m1.small"    : { "JvmHeap" : "1g", "MaxPermSize" :  "192m" },
      "m3.medium"  : { "JvmHeap" : "3g", "MaxPermSize" :  "512m" },
      "m3.large"   : { "JvmHeap" : "6g", "MaxPermSize" :  "512m" },
      "m3.xlarge"   : { "JvmHeap" : "12g", "MaxPermSize" :  "512m" },
      "m3.2xlarge"  : { "JvmHeap" : "28g", "MaxPermSize" :  "512m" },
      "c1.medium"   : { "JvmHeap" : "1g", "MaxPermSize" :  "192m" },
      "c3.large"   : { "JvmHeap" : "3g", "MaxPermSize" :  "265m" },
      "c3.xlarge"   : { "JvmHeap" : "6g", "MaxPermSize" :  "512m" },
      "c3.2xlarge"  : { "JvmHeap" : "13g", "MaxPermSize" :  "512m" },
      "c3.4xlarge"  : { "JvmHeap" : "27g", "MaxPermSize" :  "512m" },
      "r3.large"   : { "JvmHeap" : "12g", "MaxPermSize" :  "512m" },
      "r3.xlarge"  : { "JvmHeap" : "27g", "MaxPermSize" :  "512m" },
      "r3.2xlarge"  : { "JvmHeap" : "55g", "MaxPermSize" :  "512m" }
    }
  },

  "Conditions" : {
    "CreateRds" : {
      "Fn::Equals" : [{"Ref" : "CreateRdsInstance"}, "true"]
    }
  },

  "Resources" : {

    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Condition" : "CreateRds",
      "DeletionPolicy" : "Retain",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m3.xlarge",
        "Iops": "1000",
        "Port": "3306",
        "AllocatedStorage": "100",
        "BackupRetentionPeriod": "1",
        "DBName": {"Ref" : "RdsDbName"},
        "Engine": "mysql",
        "EngineVersion": "5.6.19",
        "LicenseModel": "general-public-license",
        "MasterUsername": "admin",
        "MasterUserPassword": {"Ref" : "RdsPassword"},
        "PreferredBackupWindow": "07:53-08:23",
        "PreferredMaintenanceWindow": "wed:08:35-wed:09:05",
        "MultiAZ": "true",
        "DBParameterGroupName": {
          "Ref": "dbpgturboscale"
        },
        "DBSecurityGroups": [
          {
            "Ref": "dbsgturboscale"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "production"
          }
        ]
      }
    },
    
    "dbpgturboscale": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Condition" : "CreateRds",
      "DeletionPolicy" : "Retain",
      "Properties": {
        "Description": "Parameters for turboscale",
        "Family": "mysql5.6",
        "Parameters": {
          "binlog_cache_size": "32768",
          "binlog_format": "MIXED",
          "max_allowed_packet": "78643200",
          "explicit_defaults_for_timestamp": "1",
          "innodb_buffer_pool_size": "{DBInstanceClassMemory*3/4}",
          "innodb_file_per_table": "1",
          "innodb_flush_method": "O_DIRECT"
        }
      }
    },

    "dbsgturboscale": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "DeletionPolicy" : "Retain",
      "Condition" : "CreateRds",
      "Properties": {
        "GroupDescription": "TS",
        "DBSecurityGroupIngress": [
          {
            "EC2SecurityGroupName": {
              "Ref": "sgturboscale"
            }
          }
        ]
      }
    },

    "sgturboscale": {
      "Type": "AWS::EC2::SecurityGroup",
      "DeletionPolicy" : "Retain",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created on Tuesday, January 28, 2014 10:06:36 AM UTC-8",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },


    "ControllerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "common" : ["common-install", "tomcat-install"]
          },
          
          "common-install" : {
            "packages" : {
              "yum" : {
                "java-1.7.0-openjdk-devel"  : [],
                "sendmail"  : [],
                "unzip"                     : []
              }
              },
            "sources" : {},
            "commands" : {},
            "files" : {},
            "services" : {
              "sysvinit" : {  
                "sendmail" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"                
                }
              }
            },
            "users" : {},
            "groups" : {}
          },

          "tomcat-install" : {
            "packages" : {},
            "sources" : {},
            "commands" : {
              "010_download" : {
                "command" : "wget -O /tmp/apache-tomcat.tgz http://download.nextag.com/apache/tomcat/tomcat-6/v6.0.41/bin/apache-tomcat-6.0.41.tar.gz"
              },
              "020_extract" : {
                "command" : "tar -zxf /tmp/apache-tomcat.tgz -C /opt"
              },
              "030_delete" : {
                "command" : "rm -f /tmp/apache-tomcat.tgz"
              },
              "040_symlink" : {
                "command" : "ln -snf /opt/apache-tomcat-6.0.41 /opt/tomcat6"
              },
              "050_download_mysql_connector" : {
                "command" : "wget -O /tmp/mysql-connector-java-5.1.30.tar.gz http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.30.tar.gz"
              },
              "060_extract" : {
                "command" : "tar -zxf /tmp/mysql-connector-java-5.1.30.tar.gz -C /tmp"
              },
              "070_mv_jar" : {
                "command" : "mv /tmp/mysql-connector-java-5.1.30/mysql-connector-java-5.1.30-bin.jar /opt/tomcat6/lib/"
              },
              "080_delete" : {
                "command" : "rm -fr /tmp/mysql-connector-java-5.1.30*"
              },
              "090_download_weld_support" : {
                "command" : "wget -O /opt/tomcat6/lib/weld-tomcat-support-1.0.1-Final.jar http://central.maven.org/maven2/org/jboss/weld/servlet/weld-tomcat-support/1.0.1-Final/weld-tomcat-support-1.0.1-Final.jar"
              },
              "100_download_server_xml" : {
                "command" : "wget -O /tmp/server.xml https://github.com/intuit/tank/aws-config/server.xml"
              },
              "110_modify_context" : {
                
                "command" : 
                {"Fn::If" : [
                  "CreateRds", 
                    {"Fn::Join" : ["", ["sed \"s/replace_host_name_here:3306\\/replace_db_name_here/",
                    {"Fn::GetAtt" : [ "RDSInstance" , "Endpoint.Address" ]},
                    ":",
                    {"Fn::GetAtt" : [ "RDSInstance" , "Endpoint.Port" ]},
                    "\\/",
                    {"Ref" : "RdsDbName"},
                    "/;\" /tmp/server.xml > /tmp/server1.xml"
                    ]]},
                    "cp /tmp/server.xml /opt/tomcat6/conf/server.xml"
                  ]}
                
              },
              "120_modify_context" : {
                "command" : 
                {"Fn::If" : [
                    "CreateRds", 
                  {"Fn::Join" : ["", ["sed \"s/replace_password_here/",
                  {"Ref" : "RdsPassword"},
                  "/;\" /tmp/server1.xml > /opt/tomcat6/conf/server.xml"
                  ]]},
                  "echo \"done"
                ]}
              },
              "130_ulimit" : {
                "command" : "echo ulimit -n 50000 >>/etc/profile"
              }
            },
            "files" : {
              "/etc/init.d/tomcat" : {
                "content" : { "Fn::Join" : ["", [
                  "#!/bin/bash", "\n",
                  "#", "\n",
                  "# tomcat         Start tomcat", "\n",
                  "#", "\n",
                  "#", "\n",
                  "# chkconfig: 345 99 12", "\n",
                  "# description: start stop tomcat", "\n",
                  "### BEGIN INIT INFO", "\n",
                  "# Provides: $tomcat", "\n",
                  "### END INIT INFO", "\n",

                  "# Source function library.", "\n",
                  ". /etc/init.d/functions", "\n",
                  "export CATALINA_HOME=/opt/tomcat6", "\n",
                  "export JAVA_OPTS=\"$JAVA_OPTS -Xms",
                  { "Fn::FindInMap" : [ "InstanceMap", { "Ref" : "InstanceType" }, "JvmHeap" ] },
                  " -Xmx",
                  { "Fn::FindInMap" : [ "InstanceMap", { "Ref" : "InstanceType" }, "JvmHeap" ] },
                  " -XX:PermSize=",
                  { "Fn::FindInMap" : [ "InstanceMap", { "Ref" : "InstanceType" }, "MaxPermSize" ] },
                  " -XX:MaxPermSize=",
                  { "Fn::FindInMap" : [ "InstanceMap", { "Ref" : "InstanceType" }, "MaxPermSize" ] },
                  "  -Djava.awt.headless=true\"", "\n",
                  
                  "RETVAL=0", "\n",

                  "umask 077", "\n",

                  "start() {", "\n",
                  "       echo -n $\"Starting tomcat: \"", "\n",
                  "       daemon $CATALINA_HOME/bin/startup.sh", "\n",
                  "       echo", "\n",
                  "       return $RETVAL", "\n",
                  "}", "\n",
                  "stop() {", "\n",
                  "       echo -n $\"Shutting down tomcat: \"", "\n",
                  "       daemon $CATALINA_HOME/bin/shutdown.sh", "\n",
                  "       echo", "\n",
                  "       return $RETVAL", "\n",
                  "}", "\n",
                  "restart() {", "\n",
                  "       stop", "\n",
                  "       start", "\n",
                  "}", "\n",
                  "case \"$1\" in", "\n",
                  " start)", "\n",
                  "       start", "\n",
                  "       ;;", "\n",
                  " stop)", "\n",
                  "       stop", "\n",
                  "       ;;", "\n",
                  " restart|reload)", "\n",
                  "       restart", "\n",
                  "       ;;", "\n",
                  " *)", "\n",
                  "       echo $\"Usage: $0 {start|stop|restart}\"", "\n",
                  "       exit 1", "\n",
                  "esac", "\n",

                  "exit $?", "\n"
                ]]},
                "mode" : "000755",
                "owner" : "root",
                "group" : "root"
              }
            },
            "services" : {
              "sysvinit" : {  
                "tomcat" : {
                  "enabled"       : "true",
                  "ensureRunning" : "false"                
                }
              }
            },
            "users" : {},
            "groups" : {}
          }

        }  
      },
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "sgturboscale"} ],
        "KeyName": { "Ref" : "KeyName" },
        "Monitoring": "false",
        "IamInstanceProfile": { "Ref" : "IamRole" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Turboscale Controller AMI"
          }
        ],
        
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v", "\n",
          "yum -y update", "\n",
          "yum update -y aws-cfn-bootstrap", "\n",
          
          "/opt/aws/bin/cfn-init --region ",{ "Ref": "AWS::Region" },
          " -s ", { "Ref": "AWS::StackName" },
          " -r ControllerInstance -c common", "\n",
          "/opt/aws/bin/cfn-signal", " -e 0 ", { "Fn::Base64" : { "Ref" : "UIInstanceWaitHandle" }}, "\n"

        ]]}}
      }
    },

    "AgentInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "common" : ["common-install"]
          },
          
          "common-install" : {
            "packages" : {
              "yum" : {
                "java-1.7.0-openjdk-devel"  : [],
                "unzip"                     : []
              }
              },
            "sources" : {},
            "commands" : {},
            "files" : {},
            "services" : {},
            "users" : {},
            "groups" : {}
          }

        }  
      },
      
      "Properties" : {
        
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "sgturboscale"} ],
        "KeyName": { "Ref" : "KeyName" },
        "Monitoring": "false",
        "IamInstanceProfile": { "Ref" : "IamRole" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Turboscale Agent AMI"
          }
        ],
        
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v", "\n",
          "yum -y update", "\n",
          "yum update -y aws-cfn-bootstrap", "\n",

          "/opt/aws/bin/cfn-init --region ",{ "Ref": "AWS::Region" },
          " -s ", { "Ref": "AWS::StackName" },
          " -r AgentInstance -c common", "\n",
          "chkconfig turboscale_agent on", "\n",
          "/opt/aws/bin/cfn-signal", " -e 0 ", { "Fn::Base64" : { "Ref" : "UIInstanceWaitHandle" }}, "\n"

        ]]}}
      }
    },

    "UIInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
            }
    },

    "UIInstanceWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "AgentInstance",
      "Properties" : {
        "Count": "2",
        "Handle" : { "Ref" : "UIInstanceWaitHandle" },
        "Timeout" : "900"
      }
    }   
  },


  "Outputs" : {
    "ControllerInstanceId" : {
      "Description" : "InstanceId of the newly created controller instance",
      "Value" : { "Ref" : "ControllerInstance" }
    },
    "AgentInstanceId" : {
      "Description" : "InstanceId of the newly created agent instance",
      "Value" : { "Ref" : "AgentInstance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "ControllerInstance", "AvailabilityZone" ] }
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "ControllerInstance", "PublicIp" ] }
    }
  }
}